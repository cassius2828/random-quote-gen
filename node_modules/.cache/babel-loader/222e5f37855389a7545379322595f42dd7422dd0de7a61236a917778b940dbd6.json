{"ast":null,"code":"var _jsxFileName = \"/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/randomQuoteGen/random-quote-gen/src/Text.js\",\n  _s = $RefreshSig$();\nimport tachyons from \"tachyons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux/es/hooks/useSelector\";\n\n// exports\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const randomQuoteNum = Math.floor(Math.random() * 1643);\nconst Text = () => {\n  _s();\n  // const [quote, setQuote] = useState(\"\");\n  // const [author, setAuthor] = useState(\"\");\n  const [quoteArr, setquoteArr] = useState([]);\n  const fetchQuotes = async () => {\n    // let quoteArr = [];\n    try {\n      const data = await axios.get(\"https://type.fit/api/quotes\");\n      setquoteArr(data.data);\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n    try {\n      setQuote(quoteArr.text);\n      setAuthor(quoteArr.author);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    fetchQuotes();\n  }, []);\n\n  // const getRandomQuote = () => {\n  //   // do rnandom quote logic\n  // };\n\n  // console.log(quoteArr[10].text);\n  // const randomQuoteNum = Math.floor(Math.random() * 1643);\n\n  const newQuoteState = useSelector(state => state.quote);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faQuoteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), quoteArr[3] ? quoteArr[newQuoteState].text : console.log('array is empty')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"- \", quoteArr[3] ? quoteArr[newQuoteState].author : console.log('array is empty')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(Text, \"gfBCVpltq5T2pd5QK0ZiJWQ1rRI=\", false, function () {\n  return [useSelector];\n});\n_c = Text;\nexport default Text;\n\n//? Quote API Below\n/*\n\nfetch(\"https://type.fit/api/quotes\")\n  .then(function(response) {\n    return response.json();\n  })\n  .then(function(data) {\n    console.log(data);\n  });\n\n*/\n\n// {/* {quoteArr.forEach((quote) => (\n\n// ))} */\n// }\n/*\n\neverytime I click the submit button 2 things happen\n1: Generate new quotes\n2: Generate new colors\n\nif(prevIndex < index) {\n  *display next colors from arr*\n  counter++\n} else if (index > 9) {\n  *display initial color*\n  counter - 10\n}\n\n*/\n\n//? I think the error is bc the part of the data arr I am trying to access either\n//? wont load, the number is not a number given in the array index, or something was\n//? done to affect the array / ability to access the array\n\n//* It claims the issue is on the Text component, but I am having a hard time figureing out \n//* what made it stop working when it worked fine earlier\n\n// test \nvar _c;\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["tachyons","FontAwesomeIcon","faQuoteLeft","axios","useEffect","useState","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","randomQuoteNum","Math","floor","random","Text","_s","quoteArr","setquoteArr","fetchQuotes","data","get","console","log","error","setQuote","text","setAuthor","author","newQuoteState","state","quote","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/randomQuoteGen/random-quote-gen/src/Text.js"],"sourcesContent":["import tachyons from \"tachyons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux/es/hooks/useSelector\";\n\n// exports\nexport const randomQuoteNum = Math.floor(Math.random() * 1643);\n\nconst Text = () => {\n  // const [quote, setQuote] = useState(\"\");\n  // const [author, setAuthor] = useState(\"\");\n  const [quoteArr, setquoteArr] = useState([]);\n\n  const fetchQuotes = async () => {\n    // let quoteArr = [];\n    try {\n      const data = await axios.get(\"https://type.fit/api/quotes\");\n      setquoteArr(data.data);\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n\n    try {\n      setQuote(quoteArr.text);\n      setAuthor(quoteArr.author);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchQuotes();\n\n  }, []);\n\n  // const getRandomQuote = () => {\n  //   // do rnandom quote logic\n  // };\n\n  // console.log(quoteArr[10].text);\n  // const randomQuoteNum = Math.floor(Math.random() * 1643);\n\n  const newQuoteState = useSelector((state) => state.quote);\n\n  return (\n    <>\n      {\" \"}\n      <>\n        <h2>\n          <FontAwesomeIcon icon={faQuoteLeft} />\n          {quoteArr[3] ? quoteArr[newQuoteState].text : console.log('array is empty')}\n        </h2>\n        <p>- {quoteArr[3] ? quoteArr[newQuoteState].author : console.log('array is empty')}</p>\n      </>\n    </>\n  );\n};\n\nexport default Text;\n\n//? Quote API Below\n/*\n\nfetch(\"https://type.fit/api/quotes\")\n  .then(function(response) {\n    return response.json();\n  })\n  .then(function(data) {\n    console.log(data);\n  });\n\n*/\n\n// {/* {quoteArr.forEach((quote) => (\n\n// ))} */\n// }\n/*\n\neverytime I click the submit button 2 things happen\n1: Generate new quotes\n2: Generate new colors\n\nif(prevIndex < index) {\n  *display next colors from arr*\n  counter++\n} else if (index > 9) {\n  *display initial color*\n  counter - 10\n}\n\n*/\n\n//? I think the error is bc the part of the data arr I am trying to access either\n//? wont load, the number is not a number given in the array index, or something was\n//? done to affect the array / ability to access the array\n\n\n//* It claims the issue is on the Text component, but I am having a hard time figureing out \n//* what made it stop working when it worked fine earlier\n\n// test "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}