{"ast":null,"code":"var _jsxFileName = \"/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/randomQuoteGen/random-quote-gen/src/Card.js\",\n  _s = $RefreshSig$();\nimport tachyons from \"tachyons\";\nimport Text from \"./Text\";\nimport Buttons from \"./Buttons\";\nimport { useState } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card() {\n  _s();\n  const [quote, setQuote] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const colors = [\"red\", \"orange\", \"blue\", \"skyblue\", \"lime\", \"coral\", \"tan\", \"yellow\", \"grey\", \"black\", \"pink\"];\n  const handleClick = () => {\n    setColor(\"red\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `cardBase bg-white br3 pa3 ${color}`,\n    children: [/*#__PURE__*/_jsxDEV(Text, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n/*\n*NOTES TO REMEMBER*\n1: Combine Buttons and Text Components\n- it'll make it easier to pass props and makes more sense to do so\n2: find and fix handleClick object issue\n3: Use Math.random logic to get a random array\n4: Think more like a computer when organizing your programming style\n\n\n*/\n_s(Card, \"AMRp3b5VQLWa/A/uUDuOa52eBLU=\");\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["tachyons","Text","Buttons","useState","jsxDEV","_jsxDEV","Card","_s","quote","setQuote","author","setAuthor","color","setColor","colors","handleClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/randomQuoteGen/random-quote-gen/src/Card.js"],"sourcesContent":["import tachyons from \"tachyons\";\nimport Text from \"./Text\";\nimport Buttons from \"./Buttons\";\nimport { useState } from \"react\";\n\nimport \"./index.css\";\n\nexport default function Card() {\n  const [quote, setQuote] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n\n  const colors = [\"red\", \"orange\", \"blue\", \"skyblue\", \"lime\", \"coral\", \"tan\", \n  \"yellow\", \"grey\", \"black\", \"pink\"];\n\n  const handleClick = () => {\n    setColor(\"red\");\n  };\n\n  return (\n    <div className={`cardBase bg-white br3 pa3 ${color}`}>\n      <Text />\n      <Buttons handleClick={handleClick} />\n    </div>\n  );\n}\n\n\n\n\n\n\n\n\n/*\n*NOTES TO REMEMBER*\n1: Combine Buttons and Text Components\n- it'll make it easier to pass props and makes more sense to do so\n2: find and fix handleClick object issue\n3: Use Math.random logic to get a random array\n4: Think more like a computer when organizing your programming style\n\n\n*/"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,UAAU;AAC/B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,MAAM,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAC1E,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC;EAElC,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBF,QAAQ,CAAC,KAAK,CAAC;EACjB,CAAC;EAED,oBACER,OAAA;IAAKW,SAAS,EAAG,6BAA4BJ,KAAM,EAAE;IAAAK,QAAA,gBACnDZ,OAAA,CAACJ,IAAI;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACRhB,OAAA,CAACH,OAAO;MAACa,WAAW,EAAEA;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATAd,EAAA,CA3BwBD,IAAI;AAAAgB,EAAA,GAAJhB,IAAI;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}