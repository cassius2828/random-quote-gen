{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { NEW_COLOR, NEW_QUOTE, NEXT_QUOTE, PREV_QUOTE } from \"./Action\";\nimport { useSelector } from \"react-redux\";\n\n// const newQuoteState = useSelector((state) => state.quote);\n\nconst colorReducer = (state = 0, action) => {\n  switch (action.type) {\n    case NEW_COLOR:\n      return Math.floor(Math.random() * 16);\n    default:\n      return state;\n  }\n};\n\n// const quoteState = colors[0]\n\nconst quoteReducer = (state = 0, action) => {\n  switch (action.type) {\n    case NEW_QUOTE:\n      return Math.floor(Math.random() * 1643);\n    default:\n      return state;\n  }\n};\nexport const prevReducer = (state = newQuoteState, action) => {\n  switch (action.type) {\n    case PREV_QUOTE:\n      return newQuoteState - 1;\n    default:\n      return state;\n  }\n};\nexport const nextReducer = (state = newQuoteState, action) => {\n  switch (action.type) {\n    case NEXT_QUOTE:\n      return newQuoteState + 1;\n    default:\n      return state;\n  }\n};\nexport const rootReducer = combineReducers({\n  color: colorReducer,\n  quote: quoteReducer,\n  prev: prevReducer,\n  next: nextReducer\n});","map":{"version":3,"names":["combineReducers","NEW_COLOR","NEW_QUOTE","NEXT_QUOTE","PREV_QUOTE","useSelector","colorReducer","state","action","type","Math","floor","random","quoteReducer","prevReducer","newQuoteState","nextReducer","rootReducer","color","quote","prev","next"],"sources":["/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/randomQuoteGen/random-quote-gen/src/Redux/Reducers.js"],"sourcesContent":["import { combineReducers } from \"redux\";\nimport { NEW_COLOR, NEW_QUOTE, NEXT_QUOTE, PREV_QUOTE } from \"./Action\";\nimport { useSelector } from \"react-redux\";\n\n  // const newQuoteState = useSelector((state) => state.quote);\n\nconst colorReducer = (state = 0, action) => {\n  switch (action.type) {\n    case NEW_COLOR:\n      return Math.floor(Math.random() * 16);\n    default:\n      return state;\n  }\n};\n\n// const quoteState = colors[0]\n\nconst quoteReducer = (state = 0, action) => {\n  switch (action.type) {\n    case NEW_QUOTE:\n      return Math.floor(Math.random() * 1643);\n    default:\n      return state;\n  }\n};\n\nexport const prevReducer = (state = newQuoteState, action) => {\n  switch (action.type) {\n    case PREV_QUOTE:\n      return newQuoteState - 1;\n\n    default:\n      return state;\n  }\n};\nexport const nextReducer = (state = newQuoteState, action) => {\n  switch (action.type) {\n    case NEXT_QUOTE:\n      return newQuoteState + 1;\n    default:\n      return state;\n  }\n};\n\nexport const rootReducer = combineReducers({\n  color: colorReducer,\n  quote: quoteReducer,\n  prev: prevReducer,\n  next: nextReducer\n});\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,SAAS,EAAEC,UAAU,EAAEC,UAAU,QAAQ,UAAU;AACvE,SAASC,WAAW,QAAQ,aAAa;;AAEvC;;AAEF,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAG,CAAC,EAAEC,MAAM,KAAK;EAC1C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKR,SAAS;MACZ,OAAOS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IACvC;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;;AAED;;AAEA,MAAMM,YAAY,GAAGA,CAACN,KAAK,GAAG,CAAC,EAAEC,MAAM,KAAK;EAC1C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKP,SAAS;MACZ,OAAOQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;IACzC;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMO,WAAW,GAAGA,CAACP,KAAK,GAAGQ,aAAa,EAAEP,MAAM,KAAK;EAC5D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKL,UAAU;MACb,OAAOW,aAAa,GAAG,CAAC;IAE1B;MACE,OAAOR,KAAK;EAChB;AACF,CAAC;AACD,OAAO,MAAMS,WAAW,GAAGA,CAACT,KAAK,GAAGQ,aAAa,EAAEP,MAAM,KAAK;EAC5D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,UAAU;MACb,OAAOY,aAAa,GAAG,CAAC;IAC1B;MACE,OAAOR,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMU,WAAW,GAAGjB,eAAe,CAAC;EACzCkB,KAAK,EAAEZ,YAAY;EACnBa,KAAK,EAAEN,YAAY;EACnBO,IAAI,EAAEN,WAAW;EACjBO,IAAI,EAAEL;AACR,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}