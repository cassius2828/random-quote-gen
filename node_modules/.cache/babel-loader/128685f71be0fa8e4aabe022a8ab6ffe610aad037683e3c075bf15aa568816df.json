{"ast":null,"code":"var _jsxFileName = \"/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/certificationProjects/randomQuoteGen/random-quote-gen/src/components/SearchPage/SearchQuotes.js\",\n  _s = $RefreshSig$();\nimport tachyons from \"tachyons\";\nimport { CardInfo } from \"./CardInfo\";\nimport ErrorBoundry from \"../../ErrorBoundary\";\nimport \"../../index.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n// import { data } from \"./TestAPI\";\nimport { shorterQuotes, categories } from \"../../filteredQuotes\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowAltCircleUp, faMoon, faSun, faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { goDarkMode, goLightMode, grabCard } from \"../../Redux/Action\";\nimport { Link } from \"react-router-dom\";\n\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SearchQuotes = () => {\n  _s();\n  const [category, setCategory] = useState(\"\");\n  // I did not export bc of getter vs setter error when using logic for changing array colors in dark mode\n  let colors = [\"#d61a1a\", \"#21d214\", \"#FF6633\", \"#0ed6d3\", \"#ba9a2f\", \"#3369ff\", \"#60514c\", \"#32724f\", \"#c91ead\", \"#d82b6b\", \"#3029fb\", \"#657077\", \"#99de3f\", \"#b433ff\", \"#590e0e\", \"#131142\"];\n  let colors2 = [\"#d61a1a\", \"#21d214\", \"#FF6633\", \"#0ed6d3\", \"#ba9a2f\", \"#3369ff\", \"#c9a89d\", \"#4eba7f\", \"#c91ead\", \"#d82b6b\", \"#9894f7\", \"#98aab5\", \"#99de3f\", \"#9d48cf\", \"#ff94b0\", \"#FFF\"];\n\n  //////////////////////////////////////////////////\n  // base set up for light mode vs dark mode toggle\n  const lightMode = useSelector(state => state.light);\n  lightMode ? document.body.style.backgroundColor = \"white\" : document.body.style.backgroundColor = \"rgb(32, 32, 32)\";\n  lightMode ? colors = colors : colors = colors2;\n\n  // base set up for light mode vs dark mode toggle\n  //////////////////////////////////////////////////\n\n  const dispatch = useDispatch();\n  const newColorState = useSelector(state => state.color);\n  const [search, setSearch] = useState(\"\");\n  const [filteredResults, setFilteredResults] = useState([]);\n\n  // search functionality\n  const searchQuotes = searchValue => {\n    setSearch(searchValue);\n    if (search !== \"\") {\n      const filteredData = shorterQuotes.filter(item => {\n        return Object.values(item).join(\" \").toLocaleLowerCase().includes(search.toLocaleLowerCase());\n      });\n      setFilteredResults(filteredData);\n    } else {\n      setFilteredResults(shorterQuotes);\n    }\n  };\n  const grabCard1 = selector => {\n    const theCard = document.getElementById(selector);\n    console.log(theCard);\n    console.log(\"hi\");\n  };\n  const handleCategoryChange = () => {\n    const select = document.getElementById(\"dropdown-filter\").value;\n    setCategory(select);\n  };\n  useEffect(() => {\n    handleCategoryChange();\n    console.log(category);\n  }, [category]);\n\n  //  this does not make sense\n  const test = () => {\n    console.log(updatedList);\n  };\n  let updatedList = filteredResults.filter(item => {\n    item.name === 'charles';\n    // for (let i = 0; i < item.tags.length; i++) {\n    //  return item.tags[i] === category;\n\n    // }\n    // return item.tags === category\n  });\n\n  useEffect(() => {\n    test();\n  }, [category]);\n\n  /*\n  1) filtering through item tags, some have multiple tags\n  - if one of the tags match, display it on the screen\n  \n  */\n\n  // ! START OF RETURN\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container tc\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-icon-container mb4\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faHome,\n            size: \"2x\",\n            style: {\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), lightMode ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"\",\n          style: {\n            color: colors[newColorState],\n            transition: \"all .5s ease-in-out\",\n            cursor: \"pointer\"\n          },\n          icon: faMoon,\n          size: \"2x\",\n          onClick: () => {\n            dispatch(goDarkMode());\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"\",\n          style: {\n            color: colors[newColorState],\n            cursor: \"pointer\",\n            transition: \"all .5s ease-in-out\"\n          },\n          icon: faSun,\n          size: \"2x\",\n          onClick: () => {\n            dispatch(goLightMode());\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#back-to-top\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"back-to-top\",\n            icon: faArrowAltCircleUp,\n            size: \"2x\",\n            style: {\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            color: colors[newColorState],\n            border: `solid 4px ${colors[newColorState]}`,\n            backgroundColor: `transparent`\n          },\n          onChange: e => searchQuotes(e.target.value),\n          className: \"tc f6 dim ba bw2 ph3 pv2 mb2 dib\",\n          type: \"search\",\n          placeholder: \"search for quotes...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleCategoryChange,\n          id: \"dropdown-filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {}, \"blank\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), categories.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: item\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorBoundry, {\n        children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n          className: \"infinite-scroll mb4\",\n          dataLength: shorterQuotes.length\n          // next={shorterQuotes}\n          ,\n          hasMore: true // Replace with a condition based on your data source\n          ,\n          height: 620,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"back-to-top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-containers\",\n            children: [category !== \"\" ? updatedList.map(item => {\n              return /*#__PURE__*/_jsxDEV(CardInfo, {\n                cardId: item._id,\n                quote: item.content,\n                author: item.author,\n                expand: false,\n                number: item.quote\n                // onClick={grabCard1(item._id)}\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 23\n              }, this);\n            }) : shorterQuotes.map(item => {\n              return /*#__PURE__*/_jsxDEV(CardInfo, {\n                cardId: item._id,\n                quote: item.content,\n                author: item.author,\n                expand: false,\n                number: item.quote\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 23\n              }, this);\n            }), search.length > 0 ? filteredResults.map(item => {\n              return /*#__PURE__*/_jsxDEV(CardInfo, {\n                cardId: item._id,\n                quote: item.content,\n                author: item.author,\n                expand: false,\n                number: item.quote\n                // onClick={grabCard1(item._id)}\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 23\n              }, this);\n            }) : shorterQuotes.map(item => {\n              return /*#__PURE__*/_jsxDEV(CardInfo, {\n                cardId: item._id,\n                quote: item.content,\n                author: item.author,\n                expand: false,\n                number: item.quote\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 23\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        style: {\n          color: `${colors[newColorState]}`,\n          transition: \"all .5s ease-in-out\"\n        },\n        className: \"tc ma5\",\n        children: [\"Developed By\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            color: `${colors[newColorState]}`,\n            transition: \"all .5s ease-in-out\"\n          },\n          href: \"https://github.com/cassius2828\",\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: \"Cassius Reynolds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n\n  /////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////\n  /* <div className=\"search-icon-container mb4\">\n        {/* icon 1 }\n        <Link to=\"/\">\n          <FontAwesomeIcon\n            icon={faHome}\n            size=\"2x\"\n            style={{\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\",\n            }}\n          />\n        </Link>\n        {/* icon 2 }\n        {lightMode ? (\n          <FontAwesomeIcon\n            className=\"\"\n            style={{\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\",\n              cursor: \"pointer\",\n            }}\n            icon={faMoon}\n            size=\"2x\"\n            onClick={() => {\n              dispatch(goDarkMode());\n            }}\n          />\n        ) : (\n          <FontAwesomeIcon\n            className=\"\"\n            style={{\n              color: colors[newColorState],\n              cursor: \"pointer\",\n              transition: \"all .5s ease-in-out\",\n            }}\n            icon={faSun}\n            size=\"2x\"\n            onClick={() => {\n              dispatch(goLightMode());\n            }}\n          />\n        )}\n        {/* icon 3 }\n        <a href=\"#back-to-top\">\n          <FontAwesomeIcon\n            className=\"back-to-top\"\n            icon={faArrowAltCircleUp}\n            size=\"2x\"\n            style={{\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\",\n            }}\n          />\n        </a>\n      </div>\n       {/* Search Button }\n      <input\n        style={{\n          color: colors[newColorState],\n          border: `solid 4px ${colors[newColorState]}`,\n          backgroundColor: `transparent`,\n        }}\n        onChange={(e) => searchQuotes(e.target.value)}\n        className=\"tc f6 dim ba bw2 ph3 pv2 mb2 dib\"\n        type=\"search\"\n        placeholder=\"search for quotes...\"\n      />\n       <ErrorBoundry>\n        {/* Scroll Display }\n        <InfiniteScroll\n          className=\"infinite-scroll mb4\"\n          dataLength={shorterQuotes.length}\n          // next={shorterQuotes}\n          hasMore={true} // Replace with a condition based on your data source\n          height={620}\n        >\n          <div id=\"back-to-top\"></div>\n          <div className=\"card-containers\">\n            {search.length > 0\n              ? filteredResults.map((item, index) => {\n                  return (\n                    <CardInfo\n                      index={index + 1}\n                      key={item._id}\n                      quote={item.content}\n                      author={item.author}\n                      onClick={handleExpand}\n                    />\n                  );\n                })\n              : shorterQuotes.map((item, index) => {\n                  return (\n                    <CardInfo\n                      index={index + 1}\n                      key={item._id}\n                      quote={item.content}\n                      author={item.author}\n                      onClick={handleExpand}\n                    />\n                  );\n                })}\n          </div>\n          {/* //!   will style this later \n        </InfiniteScroll>\n      </ErrorBoundry>\n      <footer\n        style={{\n          color: `${colors[newColorState]}`,\n          transition: \"all .5s ease-in-out\",\n        }}\n        className=\"tc ma5\"\n      >\n        Developed By{\" \"}\n        <a\n          style={{\n            color: `${colors[newColorState]}`,\n            transition: \"all .5s ease-in-out\",\n          }}\n          href=\"https://github.com/cassius2828\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Cassius Reynolds\n        </a>\n      {/* </footer> */\n};\n// </div> */}\n// );\n// };\n\n//* Will add <Link> to navigate card info, will bring us back to main screen with that quote selected\n//* in order to do this, that change will have to change the state as well. Action creators are the only way to\n//*change state in such a way right? So I will need to look into that\n//? OR, I could make it to where when a card is clicked all other cards disappear and this one grows??\n//?which ever concept is more feasable I will pursue\n\n/*\nThings to do\n1: Add dropdown filter by category\n2: make cards clickable and take you to the main screen with the state updated to that card number\n3: style buttons in search section\n4: style the error report when you try to hit next or previous quote on first load\n5: make site fully resposnive \n5b: take away duplicates and clean number code to match the new length of the data\n6: put it up on github\n7: make a copy and pass the necessary tests for FCC\n\n\n\n*/\n///////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////\n/*\n  \n  <div className=\"search-icon-container mb4\">\n        {/* icon 1 }\n        <Link to=\"/\">\n          <FontAwesomeIcon\n            icon={faHome}\n            size=\"2x\"\n            style={{\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\",\n            }}\n          />\n        </Link>\n        {/* icon 2 }\n        {lightMode ? (\n          <FontAwesomeIcon\n            className=\"\"\n            style={{\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\",\n              cursor: \"pointer\",\n            }}\n            icon={faMoon}\n            size=\"2x\"\n            onClick={() => {\n              dispatch(goDarkMode());\n            }}\n          />\n        ) : (\n          <FontAwesomeIcon\n            className=\"\"\n            style={{\n              color: colors[newColorState],\n              cursor: \"pointer\",\n              transition: \"all .5s ease-in-out\",\n            }}\n            icon={faSun}\n            size=\"2x\"\n            onClick={() => {\n              dispatch(goLightMode());\n            }}\n          />\n        )}\n        {/* icon 3 }\n        <a href=\"#back-to-top\">\n          <FontAwesomeIcon\n            className=\"back-to-top\"\n            icon={faArrowAltCircleUp}\n            size=\"2x\"\n            style={{\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\",\n            }}\n          />\n        </a>\n      </div>\n\n      {/* Search Button }\n      <input\n        style={{\n          color: colors[newColorState],\n          border: `solid 4px ${colors[newColorState]}`,\n          backgroundColor: `transparent`,\n        }}\n        onChange={(e) => searchQuotes(e.target.value)}\n        className=\"tc f6 dim ba bw2 ph3 pv2 mb2 dib\"\n        type=\"search\"\n        placeholder=\"search for quotes...\"\n      />\n\n      <ErrorBoundry>\n        {/* Scroll Display }\n        <InfiniteScroll\n          className=\"infinite-scroll mb4\"\n          dataLength={shorterQuotes.length}\n          // next={shorterQuotes}\n          hasMore={true} // Replace with a condition based on your data source\n          height={620}\n        >\n          <div id=\"back-to-top\"></div>\n          <div className=\"card-containers\">\n            {search.length > 0\n              ? filteredResults.map((item, index) => {\n                  return (\n                    <CardInfo\n                      index={index + 1}\n                      key={item._id}\n                      quote={item.content}\n                      author={item.author}\n                      onClick={handleExpand}\n                    />\n                  );\n                })\n              : shorterQuotes.map((item, index) => {\n                  return (\n                    <CardInfo\n                      index={index + 1}\n                      key={item._id}\n                      quote={item.content}\n                      author={item.author}\n                      onClick={handleExpand}\n                    />\n                  );\n                })}\n          </div>\n          {/* //!   will style this later }\n        </InfiniteScroll>\n      </ErrorBoundry>\n      <footer\n        style={{\n          color: `${colors[newColorState]}`,\n          transition: \"all .5s ease-in-out\",\n        }}\n        className=\"tc ma5\"\n      >\n        Developed By{\" \"}\n        <a\n          style={{\n            color: `${colors[newColorState]}`,\n            transition: \"all .5s ease-in-out\",\n          }}\n          href=\"https://github.com/cassius2828\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Cassius Reynolds\n        </a>\n      </footer> \n      \n      \n      //////////////////////////\n      \n      Expand card random route get\n\n- Click on div, sets state to that cards ID\n- Click outside of dic, sets that state to null\n\nconst expand, setExpand = useState(null);\nconst handleExpand = (e) => {\nconsole.log(e.shorterQuotes._id);\n}\n\n- Expand will be based on the state\nconst IdList = shorterQuotes.map(item._id => {\n  return item._id\n})\n\nshorterQuotes.filter(item._id => {\n  return item._id === expandState\n})\n      \n      */\n_s(SearchQuotes, \"P7kfZ0R9dIFvbv6v/BOd8RQCQrs=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n_c = SearchQuotes;\nvar _c;\n$RefreshReg$(_c, \"SearchQuotes\");","map":{"version":3,"names":["tachyons","CardInfo","ErrorBoundry","useDispatch","useSelector","useEffect","useState","shorterQuotes","categories","InfiniteScroll","FontAwesomeIcon","faArrowAltCircleUp","faMoon","faSun","faHome","goDarkMode","goLightMode","grabCard","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchQuotes","_s","category","setCategory","colors","colors2","lightMode","state","light","document","body","style","backgroundColor","dispatch","newColorState","color","search","setSearch","filteredResults","setFilteredResults","searchQuotes","searchValue","filteredData","filter","item","Object","values","join","toLocaleLowerCase","includes","grabCard1","selector","theCard","getElementById","console","log","handleCategoryChange","select","value","test","updatedList","name","className","children","to","icon","size","transition","fileName","_jsxFileName","lineNumber","columnNumber","cursor","onClick","href","border","onChange","e","target","type","placeholder","id","map","dataLength","length","hasMore","height","cardId","_id","quote","content","author","expand","number","rel","_c","$RefreshReg$"],"sources":["/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/certificationProjects/randomQuoteGen/random-quote-gen/src/components/SearchPage/SearchQuotes.js"],"sourcesContent":["import tachyons from \"tachyons\";\nimport { CardInfo } from \"./CardInfo\";\nimport ErrorBoundry from \"../../ErrorBoundary\";\nimport \"../../index.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n// import { data } from \"./TestAPI\";\nimport { shorterQuotes, categories } from \"../../filteredQuotes\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowAltCircleUp,\n  faMoon,\n  faSun,\n  faHome,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { goDarkMode, goLightMode, grabCard } from \"../../Redux/Action\";\nimport { Link } from \"react-router-dom\";\n\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n\nexport const SearchQuotes = () => {\n  const [category, setCategory] = useState(\"\");\n  // I did not export bc of getter vs setter error when using logic for changing array colors in dark mode\n  let colors = [\n    \"#d61a1a\",\n    \"#21d214\",\n    \"#FF6633\",\n    \"#0ed6d3\",\n    \"#ba9a2f\",\n    \"#3369ff\",\n    \"#60514c\",\n    \"#32724f\",\n    \"#c91ead\",\n    \"#d82b6b\",\n    \"#3029fb\",\n    \"#657077\",\n    \"#99de3f\",\n    \"#b433ff\",\n    \"#590e0e\",\n    \"#131142\",\n  ];\n  let colors2 = [\n    \"#d61a1a\",\n    \"#21d214\",\n    \"#FF6633\",\n    \"#0ed6d3\",\n    \"#ba9a2f\",\n    \"#3369ff\",\n    \"#c9a89d\",\n    \"#4eba7f\",\n    \"#c91ead\",\n    \"#d82b6b\",\n    \"#9894f7\",\n    \"#98aab5\",\n    \"#99de3f\",\n    \"#9d48cf\",\n    \"#ff94b0\",\n    \"#FFF\",\n  ];\n\n  //////////////////////////////////////////////////\n  // base set up for light mode vs dark mode toggle\n  const lightMode = useSelector((state) => state.light);\n\n  lightMode\n    ? (document.body.style.backgroundColor = \"white\")\n    : (document.body.style.backgroundColor = \"rgb(32, 32, 32)\");\n\n  lightMode ? (colors = colors) : (colors = colors2);\n\n  // base set up for light mode vs dark mode toggle\n  //////////////////////////////////////////////////\n\n  const dispatch = useDispatch();\n\n  const newColorState = useSelector((state) => state.color);\n  const [search, setSearch] = useState(\"\");\n  const [filteredResults, setFilteredResults] = useState([]);\n\n  // search functionality\n  const searchQuotes = (searchValue) => {\n    setSearch(searchValue);\n    if (search !== \"\") {\n      const filteredData = shorterQuotes.filter((item) => {\n        return Object.values(item)\n          .join(\" \")\n          .toLocaleLowerCase()\n          .includes(search.toLocaleLowerCase());\n      });\n      setFilteredResults(filteredData);\n    } else {\n      setFilteredResults(shorterQuotes);\n    }\n  };\n\n  const grabCard1 = (selector) => {\n    const theCard = document.getElementById(selector);\n\n    console.log(theCard);\n    console.log(\"hi\");\n  };\n\n  const handleCategoryChange = () => {\n    const select = document.getElementById(\"dropdown-filter\").value;\n    setCategory(select);\n  };\n\n  useEffect(() => {\n    handleCategoryChange();\n    console.log(category);\n  }, [category]);\n\n  //  this does not make sense\n  const test = () => {\n    console.log(updatedList);\n  }\n\n\n  let updatedList = filteredResults.filter(item => {\n    item.name === 'charles'\n    // for (let i = 0; i < item.tags.length; i++) {\n    //  return item.tags[i] === category;\n      \n    // }\n    // return item.tags === category\n  })\n\n\n \n\nuseEffect(() => {\n  test();\n}, [category])\n\n  /*\n  1) filtering through item tags, some have multiple tags\n  - if one of the tags match, display it on the screen\n  \n  */\n\n  // ! START OF RETURN\n\n  return (\n    <div className=\"search-container tc\">\n      <>\n        <div className=\"search-icon-container mb4\">\n          <Link to=\"/\">\n            <FontAwesomeIcon\n              icon={faHome}\n              size=\"2x\"\n              style={{\n                color: colors[newColorState],\n                transition: \"all .5s ease-in-out\",\n              }}\n            />\n          </Link>\n\n          {lightMode ? (\n            <FontAwesomeIcon\n              className=\"\"\n              style={{\n                color: colors[newColorState],\n                transition: \"all .5s ease-in-out\",\n                cursor: \"pointer\",\n              }}\n              icon={faMoon}\n              size=\"2x\"\n              onClick={() => {\n                dispatch(goDarkMode());\n              }}\n            />\n          ) : (\n            <FontAwesomeIcon\n              className=\"\"\n              style={{\n                color: colors[newColorState],\n                cursor: \"pointer\",\n                transition: \"all .5s ease-in-out\",\n              }}\n              icon={faSun}\n              size=\"2x\"\n              onClick={() => {\n                dispatch(goLightMode());\n              }}\n            />\n          )}\n\n          <a href=\"#back-to-top\">\n            <FontAwesomeIcon\n              className=\"back-to-top\"\n              icon={faArrowAltCircleUp}\n              size=\"2x\"\n              style={{\n                color: colors[newColorState],\n                transition: \"all .5s ease-in-out\",\n              }}\n            />\n          </a>\n        </div>\n\n        <div className=\"filter-container\">\n          <input\n            style={{\n              color: colors[newColorState],\n              border: `solid 4px ${colors[newColorState]}`,\n              backgroundColor: `transparent`,\n            }}\n            onChange={(e) => searchQuotes(e.target.value)}\n            className=\"tc f6 dim ba bw2 ph3 pv2 mb2 dib\"\n            type=\"search\"\n            placeholder=\"search for quotes...\"\n          />\n          <select onChange={handleCategoryChange} id=\"dropdown-filter\">\n            <option key=\"blank\"></option>\n            {categories.map((item) => {\n              return <option key={item}>{item}</option>;\n            })}\n          </select>\n        </div>\n\n        <ErrorBoundry>\n          <InfiniteScroll\n            className=\"infinite-scroll mb4\"\n            dataLength={shorterQuotes.length}\n            // next={shorterQuotes}\n            hasMore={true} // Replace with a condition based on your data source\n            height={620}\n          >\n            <div id=\"back-to-top\"></div>\n            <div className=\"card-containers\">\n              {category !== \"\"\n                ? updatedList.map((item) => {\n                    return (\n                      <CardInfo\n                        cardId={item._id}\n                        key={item._id}\n                        quote={item.content}\n                        author={item.author}\n                        expand={false}\n                        number={item.quote}\n                        // onClick={grabCard1(item._id)}\n                      />\n                    );\n                  })\n                : shorterQuotes.map((item) => {\n                    return (\n                      <CardInfo\n                        cardId={item._id}\n                        key={item._id}\n                        quote={item.content}\n                        author={item.author}\n                        expand={false}\n                        number={item.quote}\n                      />\n                    );\n                  })}\n\n              {search.length > 0\n                ? filteredResults.map((item) => {\n                    return (\n                      <CardInfo\n                        cardId={item._id}\n                        key={item._id}\n                        quote={item.content}\n                        author={item.author}\n                        expand={false}\n                        number={item.quote}\n                        // onClick={grabCard1(item._id)}\n                      />\n                    );\n                  })\n                : shorterQuotes.map((item) => {\n                    return (\n                      <CardInfo\n                        cardId={item._id}\n                        key={item._id}\n                        quote={item.content}\n                        author={item.author}\n                        expand={false}\n                        number={item.quote}\n                      />\n                    );\n                  })}\n            </div>\n          </InfiniteScroll>\n        </ErrorBoundry>\n        <footer\n          style={{\n            color: `${colors[newColorState]}`,\n            transition: \"all .5s ease-in-out\",\n          }}\n          className=\"tc ma5\"\n        >\n          Developed By{\" \"}\n          <a\n            style={{\n              color: `${colors[newColorState]}`,\n              transition: \"all .5s ease-in-out\",\n            }}\n            href=\"https://github.com/cassius2828\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Cassius Reynolds\n          </a>\n        </footer>\n      </>\n    </div>\n  );\n\n  /////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////////////////\n  /* <div className=\"search-icon-container mb4\">\n        {/* icon 1 }\n        <Link to=\"/\">\n          <FontAwesomeIcon\n            icon={faHome}\n            size=\"2x\"\n            style={{\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\",\n            }}\n          />\n        </Link>\n        {/* icon 2 }\n        {lightMode ? (\n          <FontAwesomeIcon\n            className=\"\"\n            style={{\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\",\n              cursor: \"pointer\",\n            }}\n            icon={faMoon}\n            size=\"2x\"\n            onClick={() => {\n              dispatch(goDarkMode());\n            }}\n          />\n        ) : (\n          <FontAwesomeIcon\n            className=\"\"\n            style={{\n              color: colors[newColorState],\n              cursor: \"pointer\",\n              transition: \"all .5s ease-in-out\",\n            }}\n            icon={faSun}\n            size=\"2x\"\n            onClick={() => {\n              dispatch(goLightMode());\n            }}\n          />\n        )}\n        {/* icon 3 }\n        <a href=\"#back-to-top\">\n          <FontAwesomeIcon\n            className=\"back-to-top\"\n            icon={faArrowAltCircleUp}\n            size=\"2x\"\n            style={{\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\",\n            }}\n          />\n        </a>\n      </div>\n\n      {/* Search Button }\n      <input\n        style={{\n          color: colors[newColorState],\n          border: `solid 4px ${colors[newColorState]}`,\n          backgroundColor: `transparent`,\n        }}\n        onChange={(e) => searchQuotes(e.target.value)}\n        className=\"tc f6 dim ba bw2 ph3 pv2 mb2 dib\"\n        type=\"search\"\n        placeholder=\"search for quotes...\"\n      />\n\n      <ErrorBoundry>\n        {/* Scroll Display }\n        <InfiniteScroll\n          className=\"infinite-scroll mb4\"\n          dataLength={shorterQuotes.length}\n          // next={shorterQuotes}\n          hasMore={true} // Replace with a condition based on your data source\n          height={620}\n        >\n          <div id=\"back-to-top\"></div>\n          <div className=\"card-containers\">\n            {search.length > 0\n              ? filteredResults.map((item, index) => {\n                  return (\n                    <CardInfo\n                      index={index + 1}\n                      key={item._id}\n                      quote={item.content}\n                      author={item.author}\n                      onClick={handleExpand}\n                    />\n                  );\n                })\n              : shorterQuotes.map((item, index) => {\n                  return (\n                    <CardInfo\n                      index={index + 1}\n                      key={item._id}\n                      quote={item.content}\n                      author={item.author}\n                      onClick={handleExpand}\n                    />\n                  );\n                })}\n          </div>\n          {/* //!   will style this later \n        </InfiniteScroll>\n      </ErrorBoundry>\n      <footer\n        style={{\n          color: `${colors[newColorState]}`,\n          transition: \"all .5s ease-in-out\",\n        }}\n        className=\"tc ma5\"\n      >\n        Developed By{\" \"}\n        <a\n          style={{\n            color: `${colors[newColorState]}`,\n            transition: \"all .5s ease-in-out\",\n          }}\n          href=\"https://github.com/cassius2828\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Cassius Reynolds\n        </a>\n      {/* </footer> */\n};\n// </div> */}\n// );\n// };\n\n//* Will add <Link> to navigate card info, will bring us back to main screen with that quote selected\n//* in order to do this, that change will have to change the state as well. Action creators are the only way to\n//*change state in such a way right? So I will need to look into that\n//? OR, I could make it to where when a card is clicked all other cards disappear and this one grows??\n//?which ever concept is more feasable I will pursue\n\n/*\nThings to do\n1: Add dropdown filter by category\n2: make cards clickable and take you to the main screen with the state updated to that card number\n3: style buttons in search section\n4: style the error report when you try to hit next or previous quote on first load\n5: make site fully resposnive \n5b: take away duplicates and clean number code to match the new length of the data\n6: put it up on github\n7: make a copy and pass the necessary tests for FCC\n\n\n\n*/\n///////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////\n/*\n  \n  <div className=\"search-icon-container mb4\">\n        {/* icon 1 }\n        <Link to=\"/\">\n          <FontAwesomeIcon\n            icon={faHome}\n            size=\"2x\"\n            style={{\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\",\n            }}\n          />\n        </Link>\n        {/* icon 2 }\n        {lightMode ? (\n          <FontAwesomeIcon\n            className=\"\"\n            style={{\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\",\n              cursor: \"pointer\",\n            }}\n            icon={faMoon}\n            size=\"2x\"\n            onClick={() => {\n              dispatch(goDarkMode());\n            }}\n          />\n        ) : (\n          <FontAwesomeIcon\n            className=\"\"\n            style={{\n              color: colors[newColorState],\n              cursor: \"pointer\",\n              transition: \"all .5s ease-in-out\",\n            }}\n            icon={faSun}\n            size=\"2x\"\n            onClick={() => {\n              dispatch(goLightMode());\n            }}\n          />\n        )}\n        {/* icon 3 }\n        <a href=\"#back-to-top\">\n          <FontAwesomeIcon\n            className=\"back-to-top\"\n            icon={faArrowAltCircleUp}\n            size=\"2x\"\n            style={{\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\",\n            }}\n          />\n        </a>\n      </div>\n\n      {/* Search Button }\n      <input\n        style={{\n          color: colors[newColorState],\n          border: `solid 4px ${colors[newColorState]}`,\n          backgroundColor: `transparent`,\n        }}\n        onChange={(e) => searchQuotes(e.target.value)}\n        className=\"tc f6 dim ba bw2 ph3 pv2 mb2 dib\"\n        type=\"search\"\n        placeholder=\"search for quotes...\"\n      />\n\n      <ErrorBoundry>\n        {/* Scroll Display }\n        <InfiniteScroll\n          className=\"infinite-scroll mb4\"\n          dataLength={shorterQuotes.length}\n          // next={shorterQuotes}\n          hasMore={true} // Replace with a condition based on your data source\n          height={620}\n        >\n          <div id=\"back-to-top\"></div>\n          <div className=\"card-containers\">\n            {search.length > 0\n              ? filteredResults.map((item, index) => {\n                  return (\n                    <CardInfo\n                      index={index + 1}\n                      key={item._id}\n                      quote={item.content}\n                      author={item.author}\n                      onClick={handleExpand}\n                    />\n                  );\n                })\n              : shorterQuotes.map((item, index) => {\n                  return (\n                    <CardInfo\n                      index={index + 1}\n                      key={item._id}\n                      quote={item.content}\n                      author={item.author}\n                      onClick={handleExpand}\n                    />\n                  );\n                })}\n          </div>\n          {/* //!   will style this later }\n        </InfiniteScroll>\n      </ErrorBoundry>\n      <footer\n        style={{\n          color: `${colors[newColorState]}`,\n          transition: \"all .5s ease-in-out\",\n        }}\n        className=\"tc ma5\"\n      >\n        Developed By{\" \"}\n        <a\n          style={{\n            color: `${colors[newColorState]}`,\n            transition: \"all .5s ease-in-out\",\n          }}\n          href=\"https://github.com/cassius2828\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Cassius Reynolds\n        </a>\n      </footer> \n      \n      \n      //////////////////////////\n      \n      Expand card random route get\n\n- Click on div, sets state to that cards ID\n- Click outside of dic, sets that state to null\n\nconst expand, setExpand = useState(null);\nconst handleExpand = (e) => {\nconsole.log(e.shorterQuotes._id);\n}\n\n- Expand will be based on the state\nconst IdList = shorterQuotes.map(item._id => {\n  return item._id\n})\n\nshorterQuotes.filter(item._id => {\n  return item._id === expandState\n})\n      \n      */\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}