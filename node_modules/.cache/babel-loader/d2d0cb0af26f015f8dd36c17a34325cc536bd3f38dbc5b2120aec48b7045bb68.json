{"ast":null,"code":"var _jsxFileName = \"/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/certificationProjects/randomQuoteGen/random-quote-gen/src/components/MainPage/Text.js\",\n  _s = $RefreshSig$();\nimport tachyons from \"tachyons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux/es/hooks/useSelector\";\nimport data from \"../../quotes.json\";\nimport { shorterQuotes } from \"../../filteredQuotes\";\nimport { listOfTags } from \"../../filteredQuotes\";\n\n// exports\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Text = () => {\n  _s();\n  //! no longer using API bc the site is no longer active, instead I am using my\n  //! own data I compiled from outside sources\n  // const [quoteArr, setquoteArr] = useState([]);\n\n  // const fetchQuotes = async () => {\n  //   try {\n  //     const response = await axios.get(\"https://api.api-ninjas.com/v1/quotes\", {\n  //       headers: {\n  //         \"X-Api-Key\": 'AypqPfFMnmLnw8iuCXM3Lw==qaDeh3llghS570Fh',\n  //       },\n  //     });\n\n  //     setquoteArr(response.data);\n  //     console.log(response)\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   fetchQuotes();\n  // }, []);\n\n  const quoteArr = shorterQuotes;\n  // I did not export bc of getter vs setter error when using logic for changing array colors in dark mode\n  let colors = [\"#d61a1a\", \"#21d214\", \"#FF6633\", \"#0ed6d3\", \"#ba9a2f\", \"#3369ff\", \"#60514c\", \"#32724f\", \"#c91ead\", \"#d82b6b\", \"#3029fb\", \"#657077\", \"#99de3f\", \"#b433ff\", \"#590e0e\", \"#131142\"];\n  let colors2 = [\"#d61a1a\", \"#21d214\", \"#FF6633\", \"#0ed6d3\", \"#ba9a2f\", \"#3369ff\", \"#c9a89d\", \"#4eba7f\", \"#c91ead\", \"#d82b6b\", \"#9894f7\", \"#98aab5\", \"#99de3f\", \"#9d48cf\", \"#ff94b0\", \"#FFF\"];\n\n  // useSelectors\n  const lightMode = useSelector(state => state.light);\n  const newQuoteState = useSelector(state => state.quote);\n  const newColorState = useSelector(state => state.color);\n  // base set up for light mode vs dark mode toggle\n\n  lightMode ? colors = colors : colors = colors2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"text\",\n        style: {\n          color: colors[newColorState],\n          transition: \"all .5s ease-in-out\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faQuoteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), quoteArr[312] ? \" \" + quoteArr[newQuoteState].content : \" *our api is having difficulties*\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"author\",\n        style: {\n          color: colors[newColorState],\n          transition: \"all .5s ease-in-out\"\n        },\n        children: [\"-\", \" \", quoteArr[312] ? quoteArr[newQuoteState].author ? quoteArr[newQuoteState].author : \"anonymous\" : \" :(\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Text, \"6hYHuCZMoLh/DZSvJ2EFcxuBc/Q=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = Text;\nexport default Text;\nvar _c;\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["tachyons","FontAwesomeIcon","faQuoteLeft","useSelector","data","shorterQuotes","listOfTags","jsxDEV","_jsxDEV","Fragment","_Fragment","Text","_s","quoteArr","colors","colors2","lightMode","state","light","newQuoteState","quote","newColorState","color","children","id","style","transition","icon","fileName","_jsxFileName","lineNumber","columnNumber","content","author","_c","$RefreshReg$"],"sources":["/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/certificationProjects/randomQuoteGen/random-quote-gen/src/components/MainPage/Text.js"],"sourcesContent":["import tachyons from \"tachyons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux/es/hooks/useSelector\";\nimport data from \"../../quotes.json\";\nimport { shorterQuotes } from \"../../filteredQuotes\";\nimport { listOfTags } from \"../../filteredQuotes\";\n\n// exports\n\nconst Text = () => {\n  //! no longer using API bc the site is no longer active, instead I am using my\n  //! own data I compiled from outside sources\n  // const [quoteArr, setquoteArr] = useState([]);\n\n  // const fetchQuotes = async () => {\n  //   try {\n  //     const response = await axios.get(\"https://api.api-ninjas.com/v1/quotes\", {\n  //       headers: {\n  //         \"X-Api-Key\": 'AypqPfFMnmLnw8iuCXM3Lw==qaDeh3llghS570Fh',\n  //       },\n  //     });\n\n  //     setquoteArr(response.data);\n  //     console.log(response)\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   fetchQuotes();\n  // }, []);\n\n  const quoteArr = shorterQuotes;\n  // I did not export bc of getter vs setter error when using logic for changing array colors in dark mode\n  let colors = [\n    \"#d61a1a\",\n    \"#21d214\",\n    \"#FF6633\",\n    \"#0ed6d3\",\n    \"#ba9a2f\",\n    \"#3369ff\",\n    \"#60514c\",\n    \"#32724f\",\n    \"#c91ead\",\n    \"#d82b6b\",\n    \"#3029fb\",\n    \"#657077\",\n    \"#99de3f\",\n    \"#b433ff\",\n    \"#590e0e\",\n    \"#131142\",\n  ];\n  let colors2 = [\n    \"#d61a1a\",\n    \"#21d214\",\n    \"#FF6633\",\n    \"#0ed6d3\",\n    \"#ba9a2f\",\n    \"#3369ff\",\n    \"#c9a89d\",\n    \"#4eba7f\",\n    \"#c91ead\",\n    \"#d82b6b\",\n    \"#9894f7\",\n    \"#98aab5\",\n    \"#99de3f\",\n    \"#9d48cf\",\n    \"#ff94b0\",\n    \"#FFF\",\n  ];\n\n  // useSelectors\n  const lightMode = useSelector((state) => state.light);\n  const newQuoteState = useSelector((state) => state.quote);\n  const newColorState = useSelector((state) => state.color);\n  // base set up for light mode vs dark mode toggle\n\n  lightMode ? (colors = colors) : (colors = colors2);\n  return (\n    <>\n      {\" \"}\n      <div id=\"quote-box\">\n        <h2\n          id=\"text\"\n          style={{\n            color: colors[newColorState],\n            transition: \"all .5s ease-in-out\",\n          }}\n        >\n          <FontAwesomeIcon icon={faQuoteLeft} />\n          {quoteArr[312]\n            ? \" \" + quoteArr[newQuoteState].content\n            : \" *our api is having difficulties*\"}\n        </h2>\n        <p\n          id=\"author\"\n          style={{\n            color: colors[newColorState],\n            transition: \"all .5s ease-in-out\",\n          }}\n        >\n          -{\" \"}\n          {quoteArr[312]\n            ? quoteArr[newQuoteState].author\n              ? quoteArr[newQuoteState].author\n              : \"anonymous\"\n            : \" :(\"}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default Text;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}