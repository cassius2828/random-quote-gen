{"ast":null,"code":"var _jsxFileName = \"/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/randomQuoteGen/random-quote-gen/src/Card.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// style imports\nimport tachyons from \"tachyons\";\nimport \"./index.css\";\n// font awesome imports\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSquareTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faSquareTumblr } from \"@fortawesome/free-brands-svg-icons\";\n// API import\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Buttons({\n  value,\n  onButtonClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"f6 link dim ba bw2 ph3 pv2 mb2 dib\",\n      href: \"#0\",\n      onClick: onButtonClick,\n      children: \"Next Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          size: \"3x\",\n          className: \"icons\",\n          icon: faSquareTwitter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          size: \"3x\",\n          className: \"icons\",\n          icon: faSquareTumblr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = Buttons;\nexport function Text() {\n  _s();\n  const [quote, setQuote] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [quoteArr, setquoteArr] = useState([]);\n  const fetchQuotes = async () => {\n    let quoteArr = [];\n    try {\n      const data = await axios.get(\"https://type.fit/api/quotes\");\n      console.log(data);\n      setquoteArr(data.data);\n    } catch (error) {\n      console.log(error);\n    }\n    try {\n      setQuote(quoteArr.text);\n      setAuthor(quoteArr.author);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    fetchQuotes();\n  }, []);\n  const getRandomQuote = () => {\n    // do rnandom quote logic\n  };\n\n  // console.log(quoteArr[10].text);\n  const randomNum = Math.floor(Math.random() * 100);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faQuoteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), quoteArr[randomNum].text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"- \", quoteArr[randomNum].author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(Text, \"9o7pjlQxAiM/qmBF8tZGBpj21uA=\");\n_c2 = Text;\nexport default function Card() {\n  _s2();\n  const [quote, setQuote] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const colors = [\"red\", \"orange\", \"blue\", \"skyblue\", \"lime\", \"coral\", \"tan\", \"yellow\", \"grey\", \"black\", \"pink\"];\n  const handleClick = () => {\n    setColor(\"red\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `cardBase bg-white br3 pa3 ${color}`,\n    children: [/*#__PURE__*/_jsxDEV(Text, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n/*\n*NOTES TO REMEMBER*\n1: Combine Buttons and Text Components\n- it'll make it easier to pass props and makes more sense to do so\n2: find and fix handleClick object issue\n3: Use Math.random logic to get a random array\n4: Think more like a computer when organizing your programming style\n\n\n*/\n\n//? Maybe \n_s2(Card, \"AMRp3b5VQLWa/A/uUDuOa52eBLU=\");\n_c3 = Card;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Buttons\");\n$RefreshReg$(_c2, \"Text\");\n$RefreshReg$(_c3, \"Card\");","map":{"version":3,"names":["tachyons","FontAwesomeIcon","faQuoteLeft","faSquareTwitter","faSquareTumblr","axios","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Buttons","value","onButtonClick","children","className","href","onClick","fileName","_jsxFileName","lineNumber","columnNumber","size","icon","_c","Text","_s","quote","setQuote","author","setAuthor","quoteArr","setquoteArr","fetchQuotes","data","get","console","log","error","text","getRandomQuote","randomNum","Math","floor","random","_c2","Card","_s2","color","setColor","colors","handleClick","_c3","$RefreshReg$"],"sources":["/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/randomQuoteGen/random-quote-gen/src/Card.js"],"sourcesContent":["// style imports\nimport tachyons from \"tachyons\";\nimport \"./index.css\";\n// font awesome imports\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSquareTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faSquareTumblr } from \"@fortawesome/free-brands-svg-icons\";\n// API import\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nexport function Buttons({ value, onButtonClick }) {\n  return (\n    <div>\n      <a\n        className=\"f6 link dim ba bw2 ph3 pv2 mb2 dib\"\n        href=\"#0\"\n        onClick={onButtonClick}\n      >\n        Next Quote\n      </a>\n      <div className=\"container\">\n        <a href=\"\">\n          <FontAwesomeIcon size=\"3x\" className=\"icons\" icon={faSquareTwitter} />\n          <FontAwesomeIcon size=\"3x\" className=\"icons\" icon={faSquareTumblr} />\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport function Text() {\n  const [quote, setQuote] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [quoteArr, setquoteArr] = useState([]);\n\n  const fetchQuotes = async () => {\n    let quoteArr = [];\n    try {\n      const data = await axios.get(\"https://type.fit/api/quotes\");\n      console.log(data);\n      setquoteArr(data.data);\n    } catch (error) {\n      console.log(error);\n    }\n\n    try {\n      setQuote(quoteArr.text);\n      setAuthor(quoteArr.author);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchQuotes();\n  }, []);\n\n  const getRandomQuote = () => {\n    // do rnandom quote logic\n  };\n\n  // console.log(quoteArr[10].text);\n  const randomNum = Math.floor(Math.random() * 100);\n  return (\n    <>\n      {\" \"}\n      <>\n        <h2>\n          <FontAwesomeIcon icon={faQuoteLeft} />\n          {quoteArr[randomNum].text}\n        </h2>\n        <p>- {quoteArr[randomNum].author}</p>\n      </>\n    </>\n  );\n}\n\nexport default function Card() {\n  const [quote, setQuote] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n\n  const colors = [\n    \"red\",\n    \"orange\",\n    \"blue\",\n    \"skyblue\",\n    \"lime\",\n    \"coral\",\n    \"tan\",\n    \"yellow\",\n    \"grey\",\n    \"black\",\n    \"pink\",\n  ];\n\n  const handleClick = () => {\n    setColor(\"red\");\n  };\n\n  return (\n    <div className={`cardBase bg-white br3 pa3 ${color}`}>\n      <Text />\n      <Buttons handleClick={handleClick} />\n    </div>\n  );\n}\n\n/*\n*NOTES TO REMEMBER*\n1: Combine Buttons and Text Components\n- it'll make it easier to pass props and makes more sense to do so\n2: find and fix handleClick object issue\n3: Use Math.random logic to get a random array\n4: Think more like a computer when organizing your programming style\n\n\n*/\n\n\n//? Maybe \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}