{"ast":null,"code":"import data from \"./quotes.json\";\nconst unique = data.filter((obj, index) => data.findIndex(item => item._id === obj._id) === index);\nexport let shorterQuotes = unique.filter(item => {\n  if (item.content.length < 154) {\n    return item;\n  }\n});\n// obtained an index that will not reset based on filtered array\nlet count = 0;\nshorterQuotes = shorterQuotes.map((item, index) => {\n  return {\n    ...item,\n    index: count++\n  };\n});\nexport const allTags = data.map(item => {\n  return item.tags;\n});\nexport let flatArr = [].concat(...allTags);\n\n// * Finally have filtered list of categories\nexport const filteredTags = flatArr.filter((obj, index) => flatArr.findIndex(item => item === obj) === index);\nexport const categories = filteredTags.sort(function (a, b) {\n  a = a.toLowerCase();\n  b = b.toLowerCase();\n  if (a == b) return 0;\n  return a < b ? -1 : 1;\n});","map":{"version":3,"names":["data","unique","filter","obj","index","findIndex","item","_id","shorterQuotes","content","length","count","map","allTags","tags","flatArr","concat","filteredTags","categories","sort","a","b","toLowerCase"],"sources":["/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/certificationProjects/randomQuoteGen/random-quote-gen/src/filteredQuotes.js"],"sourcesContent":["import data from \"./quotes.json\";\n\n\nconst unique = data.filter(\n  (obj, index) => data.findIndex((item) => item._id === obj._id) === index\n);\n\nexport let shorterQuotes = unique.filter((item) => {\n  if (item.content.length < 154) {\n    return item;\n  }\n});\n// obtained an index that will not reset based on filtered array\nlet count = 0\n shorterQuotes = shorterQuotes.map((item, index) => {\n  \nreturn {...item, index: count++}\n\n })\n\nexport const allTags = data.map(item => {\n  return item.tags\n})\n\nexport let flatArr = [].concat(...allTags);\n\n// * Finally have filtered list of categories\nexport const filteredTags = flatArr.filter(\n  (obj, index) => flatArr.findIndex((item) => item === obj) === index\n);\n\n\nexport const categories = filteredTags.sort(function (a, b) {\n  a = a.toLowerCase();\n  b = b.toLowerCase();\n  if (a == b) return 0;\n  return a < b ? -1 : 1;\n});\n\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,eAAe;AAGhC,MAAMC,MAAM,GAAGD,IAAI,CAACE,MAAM,CACxB,CAACC,GAAG,EAAEC,KAAK,KAAKJ,IAAI,CAACK,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKJ,GAAG,CAACI,GAAG,CAAC,KAAKH,KACrE,CAAC;AAED,OAAO,IAAII,aAAa,GAAGP,MAAM,CAACC,MAAM,CAAEI,IAAI,IAAK;EACjD,IAAIA,IAAI,CAACG,OAAO,CAACC,MAAM,GAAG,GAAG,EAAE;IAC7B,OAAOJ,IAAI;EACb;AACF,CAAC,CAAC;AACF;AACA,IAAIK,KAAK,GAAG,CAAC;AACZH,aAAa,GAAGA,aAAa,CAACI,GAAG,CAAC,CAACN,IAAI,EAAEF,KAAK,KAAK;EAEpD,OAAO;IAAC,GAAGE,IAAI;IAAEF,KAAK,EAAEO,KAAK;EAAE,CAAC;AAE/B,CAAC,CAAC;AAEH,OAAO,MAAME,OAAO,GAAGb,IAAI,CAACY,GAAG,CAACN,IAAI,IAAI;EACtC,OAAOA,IAAI,CAACQ,IAAI;AAClB,CAAC,CAAC;AAEF,OAAO,IAAIC,OAAO,GAAG,EAAE,CAACC,MAAM,CAAC,GAAGH,OAAO,CAAC;;AAE1C;AACA,OAAO,MAAMI,YAAY,GAAGF,OAAO,CAACb,MAAM,CACxC,CAACC,GAAG,EAAEC,KAAK,KAAKW,OAAO,CAACV,SAAS,CAAEC,IAAI,IAAKA,IAAI,KAAKH,GAAG,CAAC,KAAKC,KAChE,CAAC;AAGD,OAAO,MAAMc,UAAU,GAAGD,YAAY,CAACE,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;EAC1DD,CAAC,GAAGA,CAAC,CAACE,WAAW,CAAC,CAAC;EACnBD,CAAC,GAAGA,CAAC,CAACC,WAAW,CAAC,CAAC;EACnB,IAAIF,CAAC,IAAIC,CAAC,EAAE,OAAO,CAAC;EACpB,OAAOD,CAAC,GAAGC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AACvB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}