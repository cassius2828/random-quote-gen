{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { NEW_COLOR, NEW_QUOTE, INCREMENT, DECREMENT, INCREMENT_COLOR, DECREMENT_COLOR, LIGHT_MODE, DARK_MODE, GRAB_CARD } from \"./Action\";\n\n// const 0 = useSelector((state) => state.quote);\nlet randyC = 0;\nconst colorReducer = (state = randyC, action) => {\n  switch (action.type) {\n    case NEW_COLOR:\n      return randyC = Math.floor(Math.random() * 16);\n    case INCREMENT_COLOR:\n      return randyC > 14 ? randyC = 0 : randyC = randyC + 1;\n    case DECREMENT_COLOR:\n      return randyC <= 0 ? randyC = 15 : randyC = randyC - 1;\n    default:\n      return state;\n  }\n};\nlet randyQ = 0;\nconst quoteReducer = (state = randyQ, action) => {\n  switch (action.type) {\n    case NEW_QUOTE:\n      return randyQ = Math.floor(Math.random() * 741);\n    case INCREMENT:\n      return randyQ > 739 ? randyQ = 0 : randyQ = randyQ + 1;\n    case DECREMENT:\n      return randyQ <= 0 ? randyQ = 740 : randyQ = randyQ - 1;\n    default:\n      return state;\n  }\n};\nconst toggleLightModeReducer = (state = true, action) => {\n  switch (action.type) {\n    case DARK_MODE:\n      return state = false;\n    case LIGHT_MODE:\n      return state = true;\n    default:\n      return state;\n  }\n};\nconst grabCardReducer = (state = -1, action) => {\n  switch (action.type) {\n    case GRAB_CARD:\n      return state = action.quote;\n    default:\n      return state;\n  }\n};\n\n// const jumpStateReducer = (state, action) => {\n//   switch(action.type) {\n//     case JUMP_STATE:\n//       return\n//   }\n// }\n\nexport const rootReducer = combineReducers({\n  color: colorReducer,\n  quote: quoteReducer,\n  light: toggleLightModeReducer,\n  grabCard: grabCardReducer\n});","map":{"version":3,"names":["combineReducers","NEW_COLOR","NEW_QUOTE","INCREMENT","DECREMENT","INCREMENT_COLOR","DECREMENT_COLOR","LIGHT_MODE","DARK_MODE","GRAB_CARD","randyC","colorReducer","state","action","type","Math","floor","random","randyQ","quoteReducer","toggleLightModeReducer","grabCardReducer","quote","rootReducer","color","light","grabCard"],"sources":["/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/certificationProjects/randomQuoteGen/random-quote-gen/src/Redux/Reducers.js"],"sourcesContent":["import { combineReducers } from \"redux\";\nimport {\n  NEW_COLOR,\n  NEW_QUOTE,\n  INCREMENT,\n  DECREMENT,\n  INCREMENT_COLOR,\n  DECREMENT_COLOR,\n  LIGHT_MODE,\n  DARK_MODE,\n  GRAB_CARD,\n} from \"./Action\";\n\n// const 0 = useSelector((state) => state.quote);\nlet randyC = 0;\n\nconst colorReducer = (state = randyC, action) => {\n  switch (action.type) {\n    case NEW_COLOR:\n      return (randyC = Math.floor(Math.random() * 16));\n    case INCREMENT_COLOR:\n      return randyC > 14 ? (randyC = 0) : (randyC = randyC + 1);\n    case DECREMENT_COLOR:\n      return randyC <= 0 ? (randyC = 15) : (randyC = randyC - 1);\n    default:\n      return state;\n  }\n};\n\nlet randyQ = 0;\nconst quoteReducer = (state = randyQ, action) => {\n  switch (action.type) {\n    case NEW_QUOTE:\n      return (randyQ = Math.floor(Math.random() * 741));\n    case INCREMENT:\n      return randyQ > 739 ? (randyQ = 0) : (randyQ = randyQ + 1);\n    case DECREMENT:\n      return randyQ <= 0 ? (randyQ = 740) : (randyQ = randyQ - 1);\n    default:\n      return state;\n  }\n};\n\nconst toggleLightModeReducer = (state = true, action) => {\n  switch (action.type) {\n    case DARK_MODE:\n      return (state = false);\n    case LIGHT_MODE:\n      return (state = true);\n    default:\n      return state;\n  }\n};\n\nconst grabCardReducer = (state = -1, action) => {\n  switch (action.type) {\n    case GRAB_CARD:\n      return (state = action.quote);\n    default:\n      return state;\n  }\n};\n\n// const jumpStateReducer = (state, action) => {\n//   switch(action.type) {\n//     case JUMP_STATE:\n//       return\n//   }\n// }\n\nexport const rootReducer = combineReducers({\n  color: colorReducer,\n  quote: quoteReducer,\n  light: toggleLightModeReducer,\n  grabCard: grabCardReducer\n});\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,SACEC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,eAAe,EACfC,eAAe,EACfC,UAAU,EACVC,SAAS,EACTC,SAAS,QACJ,UAAU;;AAEjB;AACA,IAAIC,MAAM,GAAG,CAAC;AAEd,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAGF,MAAM,EAAEG,MAAM,KAAK;EAC/C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKb,SAAS;MACZ,OAAQS,MAAM,GAAGK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IACjD,KAAKZ,eAAe;MAClB,OAAOK,MAAM,GAAG,EAAE,GAAIA,MAAM,GAAG,CAAC,GAAKA,MAAM,GAAGA,MAAM,GAAG,CAAE;IAC3D,KAAKJ,eAAe;MAClB,OAAOI,MAAM,IAAI,CAAC,GAAIA,MAAM,GAAG,EAAE,GAAKA,MAAM,GAAGA,MAAM,GAAG,CAAE;IAC5D;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AAED,IAAIM,MAAM,GAAG,CAAC;AACd,MAAMC,YAAY,GAAGA,CAACP,KAAK,GAAGM,MAAM,EAAEL,MAAM,KAAK;EAC/C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKZ,SAAS;MACZ,OAAQgB,MAAM,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IAClD,KAAKd,SAAS;MACZ,OAAOe,MAAM,GAAG,GAAG,GAAIA,MAAM,GAAG,CAAC,GAAKA,MAAM,GAAGA,MAAM,GAAG,CAAE;IAC5D,KAAKd,SAAS;MACZ,OAAOc,MAAM,IAAI,CAAC,GAAIA,MAAM,GAAG,GAAG,GAAKA,MAAM,GAAGA,MAAM,GAAG,CAAE;IAC7D;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAED,MAAMQ,sBAAsB,GAAGA,CAACR,KAAK,GAAG,IAAI,EAAEC,MAAM,KAAK;EACvD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,SAAS;MACZ,OAAQI,KAAK,GAAG,KAAK;IACvB,KAAKL,UAAU;MACb,OAAQK,KAAK,GAAG,IAAI;IACtB;MACE,OAAOA,KAAK;EAChB;AACF,CAAC;AAED,MAAMS,eAAe,GAAGA,CAACT,KAAK,GAAG,CAAC,CAAC,EAAEC,MAAM,KAAK;EAC9C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKL,SAAS;MACZ,OAAQG,KAAK,GAAGC,MAAM,CAACS,KAAK;IAC9B;MACE,OAAOV,KAAK;EAChB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMW,WAAW,GAAGvB,eAAe,CAAC;EACzCwB,KAAK,EAAEb,YAAY;EACnBW,KAAK,EAAEH,YAAY;EACnBM,KAAK,EAAEL,sBAAsB;EAC7BM,QAAQ,EAAEL;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}