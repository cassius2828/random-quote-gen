{"ast":null,"code":"var _jsxFileName = \"/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/randomQuoteGen/random-quote-gen/src/Buttons.js\",\n  _s = $RefreshSig$();\nimport tachyons from \"tachyons\";\n// import Text from \"./Text\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSquareTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faSquareTumblr } from \"@fortawesome/free-brands-svg-icons\";\nimport { useDispatch } from \"react-redux\";\nimport { newColor, newFade, newQuote } from \"./Redux/Action\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = ['#FF6633', '#21d214', '#d61a1a', '#0ed6d3', '#ba9a2f', '#3369ff', '#60514c', '#32724f', '#c91ead', '#d82b6b', '#3029fb', '#657077', '#99de3f', '#b433ff', '#590e0e', '#131142'];\nconst Buttons = () => {\n  _s();\n  const [fade, setFade] = useState(\"quote-box\");\n  const dispatch = useDispatch();\n  const newColorState = useSelector(state => state.color);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      style: {\n        color: colors[newColorState],\n        transition: \"all .5s ease-in-out\"\n      },\n      className: \"f6 link dim ba bw2 ph3 pv2 mb2 dib\",\n      href: \"#0\",\n      onClick: () => {\n        dispatch(newQuote());\n        dispatch(newColor());\n        dispatch(newFade(setTimeout(() => {\n          setFade;\n        })));\n      },\n      children: \"Next Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          style: {\n            color: colors[newColorState],\n            transition: \"all .5s ease-in-out\"\n          },\n          size: \"3x\",\n          className: \"icons\",\n          icon: faSquareTwitter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          style: {\n            color: colors[newColorState],\n            transition: \"all .5s ease-in-out\"\n          },\n          size: \"3x\",\n          className: \"icons\",\n          icon: faSquareTumblr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Buttons, \"RnEdPLizm3mmRSfdaLK86xiPLB8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Buttons;\nexport default Buttons;\nvar _c;\n$RefreshReg$(_c, \"Buttons\");","map":{"version":3,"names":["tachyons","FontAwesomeIcon","faSquareTwitter","faSquareTumblr","useDispatch","newColor","newFade","newQuote","useSelector","useState","jsxDEV","_jsxDEV","colors","Buttons","_s","fade","setFade","dispatch","newColorState","state","color","children","style","transition","className","href","onClick","setTimeout","fileName","_jsxFileName","lineNumber","columnNumber","size","icon","_c","$RefreshReg$"],"sources":["/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/randomQuoteGen/random-quote-gen/src/Buttons.js"],"sourcesContent":["import tachyons from \"tachyons\";\n// import Text from \"./Text\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSquareTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faSquareTumblr } from \"@fortawesome/free-brands-svg-icons\";\nimport { useDispatch } from \"react-redux\";\nimport {newColor, newFade, newQuote} from \"./Redux/Action\";\nimport { useSelector } from \"react-redux\";\nimport {useState} from \"react\";\n\n\n\nconst colors = [\n\n     '#FF6633',\n     '#21d214',\n     '#d61a1a',\n     '#0ed6d3',\n     '#ba9a2f',\n     '#3369ff',\n     '#60514c',\n     '#32724f',\n     '#c91ead',\n     '#d82b6b',\n     '#3029fb',\n     '#657077',\n     '#99de3f',\n     '#b433ff',\n     '#590e0e',\n     '#131142',\n];\n\nconst Buttons = () => {\n  const [fade, setFade] = useState(\"quote-box\");\nconst dispatch = useDispatch();\n  const newColorState = useSelector((state) => state.color);\n\n  return (\n    <div>\n      <a\n        style={{\n          color: colors[newColorState],\n          transition: \"all .5s ease-in-out\",\n        }}\n        className=\"f6 link dim ba bw2 ph3 pv2 mb2 dib\"\n        href=\"#0\"\n        onClick={() => {\n          dispatch(newQuote());\n          dispatch(newColor());\n          dispatch(newFade(\n            setTimeout(() => {\n             setFade\n            })\n          ));\n        }}\n      >\n        Next Quote\n      </a>\n      <div className=\"container\">\n        <a href=\"\">\n          <FontAwesomeIcon\n            style={{\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\",\n            }}\n            size=\"3x\"\n            className=\"icons\"\n            icon={faSquareTwitter}\n          />\n          <FontAwesomeIcon\n            style={{\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\",\n            }}\n            size=\"3x\"\n            className=\"icons\"\n            icon={faSquareTumblr}\n          />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Buttons;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}