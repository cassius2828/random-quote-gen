{"ast":null,"code":"var _jsxFileName = \"/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/certificationProjects/randomQuoteGen/random-quote-gen/src/components/SearchPage/SearchQuotes.js\",\n  _s = $RefreshSig$();\nimport tachyons from \"tachyons\";\nimport { CardInfo } from \"./CardInfo\";\nimport ErrorBoundry from \"../../ErrorBoundary\";\nimport \"../../index.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n// import { data } from \"./TestAPI\";\nimport { shorterQuotes, categories } from \"../../filteredQuotes\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowAltCircleUp, faMoon, faSun, faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { goDarkMode, goLightMode, grabCard } from \"../../Redux/Action\";\nimport { Link } from \"react-router-dom\";\n\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SearchQuotes = () => {\n  _s();\n  const [category, setCategory] = useState(\"\");\n  // I did not export bc of getter vs setter error when using logic for changing array colors in dark mode\n  let colors = [\"#d61a1a\", \"#21d214\", \"#FF6633\", \"#0ed6d3\", \"#ba9a2f\", \"#3369ff\", \"#60514c\", \"#32724f\", \"#c91ead\", \"#d82b6b\", \"#3029fb\", \"#657077\", \"#99de3f\", \"#b433ff\", \"#590e0e\", \"#131142\"];\n  let colors2 = [\"#d61a1a\", \"#21d214\", \"#FF6633\", \"#0ed6d3\", \"#ba9a2f\", \"#3369ff\", \"#c9a89d\", \"#4eba7f\", \"#c91ead\", \"#d82b6b\", \"#9894f7\", \"#98aab5\", \"#99de3f\", \"#9d48cf\", \"#ff94b0\", \"#FFF\"];\n\n  //////////////////////////////////////////////////\n  // base set up for light mode vs dark mode toggle\n  const lightMode = useSelector(state => state.light);\n  lightMode ? document.body.style.backgroundColor = \"white\" : document.body.style.backgroundColor = \"rgb(32, 32, 32)\";\n  lightMode ? colors = colors : colors = colors2;\n\n  // base set up for light mode vs dark mode toggle\n  //////////////////////////////////////////////////\n\n  const dispatch = useDispatch();\n  // global and local state\n  const newColorState = useSelector(state => state.color);\n  const [search, setSearch] = useState(\"\");\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [dblFiltered, setDblFiltered] = useState([]);\n  const [searchToggle, setSearchToggle] = useState(false);\n\n  // * filters quotes in drop down\n  const customIncludes = (obj, property, value) => {\n    if (!obj.hasOwnProperty(property)) {\n      return false;\n    }\n    if (Array.isArray(obj[property])) {\n      if (obj[property].includes(value)) {\n        return true;\n      } else if (obj[property] === value) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  };\n\n  // let updatedList = shorterQuotes.filter((item) => {\n  //   return item.tags[2]\n  //     ? item.tags[0] === category ||\n  //         item.tags[1] === category ||\n  //         item.tags[2] === category\n  //     : item.tags[0] === category || item.tags[1] === category;\n  // });\n\n  // useEffect(() => {\n  //   console.log(updatedList);\n  // }, [category]);\n\n  // search functionality\n  const searchQuotes = searchValue => {\n    setSearch(searchValue);\n    if (search !== \"\") {\n      const filteredData = shorterQuotes.filter(item => {\n        return Object.values(item).join(\" \").toLocaleLowerCase().includes(search.toLocaleLowerCase());\n      });\n      setFilteredResults(filteredData);\n    } else {\n      setFilteredResults(shorterQuotes);\n    }\n  };\n\n  // searches through already categorized quotes\n  const searchCategoryQuotes = searchValue => {\n    setSearch(searchValue);\n    if (search !== \"\") {\n      const filteredData = updatedList.filter(item => {\n        return Object.values(item).join(\" \").toLocaleLowerCase().includes(search.toLocaleLowerCase());\n      });\n      setDblFiltered(filteredData);\n    } else {\n      setDblFiltered(updatedList);\n    }\n  };\n\n  // updates category state\n  const handleCategoryChange = () => {\n    const select = document.getElementById(\"dropdown-filter\").value;\n    setCategory(select);\n  };\n\n  // alternates search bars to search through the correct lists\n  useEffect(() => {\n    handleCategoryChange();\n    if (category !== \"\") {\n      setSearchToggle(false);\n    } else {\n      setSearchToggle(true);\n    }\n    console.log(category);\n  }, [category]);\n\n  // //////////////////\n  // ! START OF RETURN\n  // //////////////////\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container tc\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-icon-container mb4\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faHome,\n            size: \"2x\",\n            style: {\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), lightMode ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"\",\n          style: {\n            color: colors[newColorState],\n            transition: \"all .5s ease-in-out\",\n            cursor: \"pointer\"\n          },\n          icon: faMoon,\n          size: \"2x\",\n          onClick: () => {\n            dispatch(goDarkMode());\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"\",\n          style: {\n            color: colors[newColorState],\n            cursor: \"pointer\",\n            transition: \"all .5s ease-in-out\"\n          },\n          icon: faSun,\n          size: \"2x\",\n          onClick: () => {\n            dispatch(goLightMode());\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#back-to-top\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"back-to-top\",\n            icon: faArrowAltCircleUp,\n            size: \"2x\",\n            style: {\n              color: colors[newColorState],\n              transition: \"all .5s ease-in-out\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        children: [!searchToggle ?\n        /*#__PURE__*/\n        // dbl search\n        _jsxDEV(\"input\", {\n          style: {\n            color: lightMode ? colors[newColorState] : \"whitesmoke\",\n            border: `solid 4px ${colors[newColorState]}`,\n            backgroundColor: `transparent`\n          },\n          onChange: e => searchCategoryQuotes(e.target.value),\n          className: \"tc f6 ba bw2 ph3 pv2 mb2 dib\",\n          type: \"search\",\n          placeholder: \"search for quotes...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // single search\n        _jsxDEV(\"input\", {\n          style: {\n            color: lightMode ? colors[newColorState] : \"whitesmoke\",\n            border: `solid 4px ${colors[newColorState]}`,\n            backgroundColor: `transparent`\n          },\n          onChange: e => searchQuotes(e.target.value),\n          className: \"tc f6 ba bw2 ph3 pv2 mb2 dib\",\n          type: \"search\",\n          placeholder: \"search for quotes...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"tc f6 ba bw2 ph3  mb2 dib\",\n          style: {\n            border: `solid 4px ${colors[newColorState]}`\n          },\n          onChange: handleCategoryChange,\n          id: \"dropdown-filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {}, \"blank\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), categories.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: item\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorBoundry, {\n        children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n          className: \"infinite-scroll mb4\",\n          dataLength: shorterQuotes.length\n          // next={shorterQuotes}\n          ,\n          hasMore: true // Replace with a condition based on your data source\n          ,\n          height: 620,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"back-to-top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-containers\",\n            children:\n            // * if a category is selected and the search bar is active then\n            // * search filter thru the categorized list\n            category !== \"\" && search.length > 0 ? dblFiltered.map(item => {\n              return /*#__PURE__*/_jsxDEV(CardInfo, {\n                cardId: item._id,\n                quote: item.content,\n                author: item.author,\n                expand: false,\n                number: item.quote\n                // onClick={grabCard1(item._id)}\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 25\n              }, this);\n            }) :\n            // * if a category is selected, filter by category\n            category !== \"\" ? updatedList.map(item => {\n              return /*#__PURE__*/_jsxDEV(CardInfo, {\n                cardId: item._id,\n                quote: item.content,\n                author: item.author,\n                expand: false,\n                number: item.quote\n                // onClick={grabCard1(item._id)}\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 25\n              }, this);\n            }) :\n            // * if no category is selected, filter by search\n            search.length > 0 ? filteredResults.map(item => {\n              return /*#__PURE__*/_jsxDEV(CardInfo, {\n                cardId: item._id,\n                quote: item.content,\n                author: item.author,\n                expand: false,\n                number: item.quote\n                // onClick={grabCard1(item._id)}\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 25\n              }, this);\n            }) :\n            // * if none are true then return whole list\n            shorterQuotes.map(item => {\n              return /*#__PURE__*/_jsxDEV(CardInfo, {\n                cardId: item._id,\n                quote: item.content,\n                author: item.author,\n                expand: false,\n                number: item.quote\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        style: {\n          color: `${colors[newColorState]}`,\n          transition: \"all .5s ease-in-out\"\n        },\n        className: \"tc ma5\",\n        children: [\"Developed By\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            color: `${colors[newColorState]}`,\n            transition: \"all .5s ease-in-out\"\n          },\n          href: \"https://github.com/cassius2828\",\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: \"Cassius Reynolds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchQuotes, \"2WzS1vTdEeMmwlLO3E/0ilB8AOI=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n_c = SearchQuotes;\nvar _c;\n$RefreshReg$(_c, \"SearchQuotes\");","map":{"version":3,"names":["tachyons","CardInfo","ErrorBoundry","useDispatch","useSelector","useEffect","useState","shorterQuotes","categories","InfiniteScroll","FontAwesomeIcon","faArrowAltCircleUp","faMoon","faSun","faHome","goDarkMode","goLightMode","grabCard","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchQuotes","_s","category","setCategory","colors","colors2","lightMode","state","light","document","body","style","backgroundColor","dispatch","newColorState","color","search","setSearch","filteredResults","setFilteredResults","dblFiltered","setDblFiltered","searchToggle","setSearchToggle","customIncludes","obj","property","value","hasOwnProperty","Array","isArray","includes","searchQuotes","searchValue","filteredData","filter","item","Object","values","join","toLocaleLowerCase","searchCategoryQuotes","updatedList","handleCategoryChange","select","getElementById","console","log","className","children","to","icon","size","transition","fileName","_jsxFileName","lineNumber","columnNumber","cursor","onClick","href","border","onChange","e","target","type","placeholder","id","map","dataLength","length","hasMore","height","cardId","_id","quote","content","author","expand","number","rel","_c","$RefreshReg$"],"sources":["/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/certificationProjects/randomQuoteGen/random-quote-gen/src/components/SearchPage/SearchQuotes.js"],"sourcesContent":["import tachyons from \"tachyons\";\nimport { CardInfo } from \"./CardInfo\";\nimport ErrorBoundry from \"../../ErrorBoundary\";\nimport \"../../index.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n// import { data } from \"./TestAPI\";\nimport { shorterQuotes, categories } from \"../../filteredQuotes\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowAltCircleUp,\n  faMoon,\n  faSun,\n  faHome,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { goDarkMode, goLightMode, grabCard } from \"../../Redux/Action\";\nimport { Link } from \"react-router-dom\";\n\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n//////////////////////////////////////////////////\n\nexport const SearchQuotes = () => {\n  const [category, setCategory] = useState(\"\");\n  // I did not export bc of getter vs setter error when using logic for changing array colors in dark mode\n  let colors = [\n    \"#d61a1a\",\n    \"#21d214\",\n    \"#FF6633\",\n    \"#0ed6d3\",\n    \"#ba9a2f\",\n    \"#3369ff\",\n    \"#60514c\",\n    \"#32724f\",\n    \"#c91ead\",\n    \"#d82b6b\",\n    \"#3029fb\",\n    \"#657077\",\n    \"#99de3f\",\n    \"#b433ff\",\n    \"#590e0e\",\n    \"#131142\",\n  ];\n  let colors2 = [\n    \"#d61a1a\",\n    \"#21d214\",\n    \"#FF6633\",\n    \"#0ed6d3\",\n    \"#ba9a2f\",\n    \"#3369ff\",\n    \"#c9a89d\",\n    \"#4eba7f\",\n    \"#c91ead\",\n    \"#d82b6b\",\n    \"#9894f7\",\n    \"#98aab5\",\n    \"#99de3f\",\n    \"#9d48cf\",\n    \"#ff94b0\",\n    \"#FFF\",\n  ];\n\n  //////////////////////////////////////////////////\n  // base set up for light mode vs dark mode toggle\n  const lightMode = useSelector((state) => state.light);\n\n  lightMode\n    ? (document.body.style.backgroundColor = \"white\")\n    : (document.body.style.backgroundColor = \"rgb(32, 32, 32)\");\n\n  lightMode ? (colors = colors) : (colors = colors2);\n\n  // base set up for light mode vs dark mode toggle\n  //////////////////////////////////////////////////\n\n  const dispatch = useDispatch();\n  // global and local state\n  const newColorState = useSelector((state) => state.color);\n  const [search, setSearch] = useState(\"\");\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [dblFiltered, setDblFiltered] = useState([]);\n  const [searchToggle, setSearchToggle] = useState(false);\n\n  // * filters quotes in drop down\nconst customIncludes = (obj, property, value) => {\n  if(!obj.hasOwnProperty(property)) {\n    return false;\n  }\n if(Array.isArray(obj[property])) {\n  if(obj[property].includes(value)) {\n    return true;\n  } else if(obj[property] === value) {\n    return true;\n  } else {\n    return false;\n  }\n }\n}\n\n\n\n  // let updatedList = shorterQuotes.filter((item) => {\n  //   return item.tags[2]\n  //     ? item.tags[0] === category ||\n  //         item.tags[1] === category ||\n  //         item.tags[2] === category\n  //     : item.tags[0] === category || item.tags[1] === category;\n  // });\n\n  // useEffect(() => {\n  //   console.log(updatedList);\n  // }, [category]);\n\n  // search functionality\n  const searchQuotes = (searchValue) => {\n    setSearch(searchValue);\n    if (search !== \"\") {\n      const filteredData = shorterQuotes.filter((item) => {\n        return Object.values(item)\n          .join(\" \")\n          .toLocaleLowerCase()\n          .includes(search.toLocaleLowerCase());\n      });\n      setFilteredResults(filteredData);\n    } else {\n      setFilteredResults(shorterQuotes);\n    }\n  };\n\n  // searches through already categorized quotes\n  const searchCategoryQuotes = (searchValue) => {\n    setSearch(searchValue);\n    if (search !== \"\") {\n      const filteredData = updatedList.filter((item) => {\n        return Object.values(item)\n          .join(\" \")\n          .toLocaleLowerCase()\n          .includes(search.toLocaleLowerCase());\n      });\n      setDblFiltered(filteredData);\n    } else {\n      setDblFiltered(updatedList);\n    }\n  };\n\n  // updates category state\n  const handleCategoryChange = () => {\n    const select = document.getElementById(\"dropdown-filter\").value;\n    setCategory(select);\n  };\n\n  // alternates search bars to search through the correct lists\n  useEffect(() => {\n    handleCategoryChange();\n    if (category !== \"\") {\n      setSearchToggle(false);\n    } else {\n      setSearchToggle(true);\n    }\n    console.log(category);\n  }, [category]);\n\n  // //////////////////\n  // ! START OF RETURN\n  // //////////////////\n  return (\n    <div className=\"search-container tc\">\n      <>\n        <div className=\"search-icon-container mb4\">\n          <Link to=\"/\">\n            <FontAwesomeIcon\n              icon={faHome}\n              size=\"2x\"\n              style={{\n                color: colors[newColorState],\n                transition: \"all .5s ease-in-out\",\n              }}\n            />\n          </Link>\n\n          {lightMode ? (\n            <FontAwesomeIcon\n              className=\"\"\n              style={{\n                color: colors[newColorState],\n                transition: \"all .5s ease-in-out\",\n                cursor: \"pointer\",\n              }}\n              icon={faMoon}\n              size=\"2x\"\n              onClick={() => {\n                dispatch(goDarkMode());\n              }}\n            />\n          ) : (\n            <FontAwesomeIcon\n              className=\"\"\n              style={{\n                color: colors[newColorState],\n                cursor: \"pointer\",\n                transition: \"all .5s ease-in-out\",\n              }}\n              icon={faSun}\n              size=\"2x\"\n              onClick={() => {\n                dispatch(goLightMode());\n              }}\n            />\n          )}\n\n          <a href=\"#back-to-top\">\n            <FontAwesomeIcon\n              className=\"back-to-top\"\n              icon={faArrowAltCircleUp}\n              size=\"2x\"\n              style={{\n                color: colors[newColorState],\n                transition: \"all .5s ease-in-out\",\n              }}\n            />\n          </a>\n        </div>\n\n        <div className=\"filter-container\">\n          {/* switching the search toggle value worked! lets go */}\n          {!searchToggle ? (\n            // dbl search\n            <input\n              style={{\n                color: lightMode ? colors[newColorState] : \"whitesmoke\",\n                border: `solid 4px ${colors[newColorState]}`,\n                backgroundColor: `transparent`,\n              }}\n              onChange={(e) => searchCategoryQuotes(e.target.value)}\n              className=\"tc f6 ba bw2 ph3 pv2 mb2 dib\"\n              type=\"search\"\n              placeholder=\"search for quotes...\"\n            />\n          ) : (\n            // single search\n            <input\n              style={{\n                color: lightMode ? colors[newColorState] : \"whitesmoke\",\n                border: `solid 4px ${colors[newColorState]}`,\n                backgroundColor: `transparent`,\n              }}\n              onChange={(e) => searchQuotes(e.target.value)}\n              className=\"tc f6 ba bw2 ph3 pv2 mb2 dib\"\n              type=\"search\"\n              placeholder=\"search for quotes...\"\n            />\n          )}\n          <select\n            className=\"tc f6 ba bw2 ph3  mb2 dib\"\n            style={{\n              border: `solid 4px ${colors[newColorState]}`,\n            }}\n            onChange={handleCategoryChange}\n            id=\"dropdown-filter\"\n          >\n            <option key=\"blank\"></option>\n            {categories.map((item) => {\n              return <option key={item}>{item}</option>;\n            })}\n          </select>\n        </div>\n\n        <ErrorBoundry>\n          <InfiniteScroll\n            className=\"infinite-scroll mb4\"\n            dataLength={shorterQuotes.length}\n            // next={shorterQuotes}\n            hasMore={true} // Replace with a condition based on your data source\n            height={620}\n          >\n            <div id=\"back-to-top\"></div>\n            <div className=\"card-containers\">\n              {\n                // * if a category is selected and the search bar is active then\n                // * search filter thru the categorized list\n                category !== \"\" && search.length > 0\n                  ? dblFiltered.map((item) => {\n                      return (\n                        <CardInfo\n                          cardId={item._id}\n                          key={item._id}\n                          quote={item.content}\n                          author={item.author}\n                          expand={false}\n                          number={item.quote}\n                          // onClick={grabCard1(item._id)}\n                        />\n                      );\n                    })\n                  : // * if a category is selected, filter by category\n                  category !== \"\"\n                  ? updatedList.map((item) => {\n                      return (\n                        <CardInfo\n                          cardId={item._id}\n                          key={item._id}\n                          quote={item.content}\n                          author={item.author}\n                          expand={false}\n                          number={item.quote}\n                          // onClick={grabCard1(item._id)}\n                        />\n                      );\n                    })\n                  : // * if no category is selected, filter by search\n                  search.length > 0\n                  ? filteredResults.map((item) => {\n                      return (\n                        <CardInfo\n                          cardId={item._id}\n                          key={item._id}\n                          quote={item.content}\n                          author={item.author}\n                          expand={false}\n                          number={item.quote}\n                          // onClick={grabCard1(item._id)}\n                        />\n                      );\n                    })\n                  : // * if none are true then return whole list\n                    shorterQuotes.map((item) => {\n                      return (\n                        <CardInfo\n                          cardId={item._id}\n                          key={item._id}\n                          quote={item.content}\n                          author={item.author}\n                          expand={false}\n                          number={item.quote}\n                        />\n                      );\n                    })\n              }\n            </div>\n          </InfiniteScroll>\n        </ErrorBoundry>\n        <footer\n          style={{\n            color: `${colors[newColorState]}`,\n            transition: \"all .5s ease-in-out\",\n          }}\n          className=\"tc ma5\"\n        >\n          Developed By{\" \"}\n          <a\n            style={{\n              color: `${colors[newColorState]}`,\n              transition: \"all .5s ease-in-out\",\n            }}\n            href=\"https://github.com/cassius2828\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Cassius Reynolds\n          </a>\n        </footer>\n      </>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}