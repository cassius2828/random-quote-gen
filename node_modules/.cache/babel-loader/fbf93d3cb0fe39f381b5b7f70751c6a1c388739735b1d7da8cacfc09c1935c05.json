{"ast":null,"code":"var _jsxFileName = \"/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/randomQuoteGen/random-quote-gen/src/components/SearchPage/SearchQuotes.js\",\n  _s = $RefreshSig$();\nimport tachyons from \"tachyons\";\nimport { CardInfo } from \"./CardInfo\";\nimport \"../../index.css\";\nimport { colors } from \"../MainPage/Buttons\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\n// import { data } from \"./TestAPI\";\nimport { shorterQuotes } from \"../../filteredQuotes\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowAltCircleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchQuotes = () => {\n  _s();\n  const newColorState = useSelector(state => state.color);\n  const [search, setSearch] = useState(\"\");\n  const [filteredResults, setFilteredResults] = useState([]);\n  const searchQuotes = searchValue => {\n    setSearch(searchValue);\n    if (search !== \"\") {\n      const filteredData = shorterQuotes.filter(item => {\n        return Object.values(item).join(\" \").toLocaleLowerCase().includes(search.toLocaleLowerCase());\n      });\n      setFilteredResults(filteredData);\n    } else {\n      setFilteredResults(shorterQuotes);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container tc\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        color: colors[newColorState],\n        border: `solid 4px ${colors[newColorState]}`\n      },\n      onChange: e => searchQuotes(e.target.value),\n      className: \"tc f6 dim ba bw2 ph3 pv2 mb2 dib\",\n      type: \"search\",\n      placeholder: \"search for quotes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      className: \"infinite-scroll mb4\",\n      dataLength: shorterQuotes.length,\n      next: shorterQuotes,\n      hasMore: true // Replace with a condition based on your data source\n      ,\n      height: 620,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"back-to-top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-containers\",\n        children: search.length > 0 ? filteredResults.map((item, key) => {\n          return /*#__PURE__*/_jsxDEV(CardInfo, {\n            quote: item.content,\n            author: item.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 24\n          }, this);\n        }) : shorterQuotes.map((item, key) => {\n          return /*#__PURE__*/_jsxDEV(CardInfo, {\n            quote: item.content,\n            author: item.author\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#back-to-top\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"back-to-top\",\n          icon: faArrowAltCircleUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      style: {\n        color: `${colors[newColorState]}`,\n        transition: \"all .5s ease-in-out\"\n      },\n      className: \"tc ma5\",\n      children: [\"Developed By\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        style: {\n          color: `${colors[newColorState]}`,\n          transition: \"all .5s ease-in-out\"\n        },\n        href: \"https://github.com/cassius2828\",\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: \"Cassius Reynolds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n//* Will add <Link> to navigate card info, will bring us back to main screen with that quote selected\n//* in order to do this, that change will have to change the state as well. Action creators are the only way to\n//*change state in such a way right? So I will need to look into that\n//? OR, I could make it to where when a card is clicked all other cards disappear and this one grows??\n//?which ever concept is more feasable I will pursue\n\n/*\nThings to do\n1: Add dropdown filter by category\n2: make cards clickable and take you to the main screen with the state updated to that card number\n\n\n\n*/\n_s(SearchQuotes, \"HiOaYwMC1zUqmuySX0WTS9DZtys=\", false, function () {\n  return [useSelector];\n});\n_c = SearchQuotes;\nvar _c;\n$RefreshReg$(_c, \"SearchQuotes\");","map":{"version":3,"names":["tachyons","CardInfo","colors","useSelector","useState","shorterQuotes","InfiniteScroll","FontAwesomeIcon","faArrowAltCircleUp","jsxDEV","_jsxDEV","SearchQuotes","_s","newColorState","state","color","search","setSearch","filteredResults","setFilteredResults","searchQuotes","searchValue","filteredData","filter","item","Object","values","join","toLocaleLowerCase","includes","className","children","style","border","onChange","e","target","value","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","length","next","hasMore","height","id","map","key","quote","content","author","href","icon","transition","rel","_c","$RefreshReg$"],"sources":["/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/randomQuoteGen/random-quote-gen/src/components/SearchPage/SearchQuotes.js"],"sourcesContent":["import tachyons from \"tachyons\";\nimport { CardInfo } from \"./CardInfo\";\nimport \"../../index.css\";\nimport { colors } from \"../MainPage/Buttons\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\n// import { data } from \"./TestAPI\";\nimport { shorterQuotes } from \"../../filteredQuotes\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowAltCircleUp } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const SearchQuotes = () => {\n  const newColorState = useSelector((state) => state.color);\n  const [search, setSearch] = useState(\"\");\n  const [filteredResults, setFilteredResults] = useState([]);\n  const searchQuotes = (searchValue) => {\n    setSearch(searchValue);\n    if (search !== \"\") {\n      const filteredData = shorterQuotes.filter((item) => {\n        return Object.values(item)\n          .join(\" \")\n          .toLocaleLowerCase()\n          .includes(search.toLocaleLowerCase());\n      });\n      setFilteredResults(filteredData);\n    } else {\n      setFilteredResults(shorterQuotes);\n    }\n  };\n\n  return (\n    <div className=\"search-container tc\">\n      <input\n        style={{\n          color: colors[newColorState],\n          border: `solid 4px ${colors[newColorState]}`,\n        }}\n        onChange={(e) => searchQuotes(e.target.value)}\n        className=\"tc f6 dim ba bw2 ph3 pv2 mb2 dib\"\n        type=\"search\"\n        placeholder=\"search for quotes...\"\n      />\n      {/* break */}\n      <InfiniteScroll\n        className=\"infinite-scroll mb4\"\n        dataLength={shorterQuotes.length}\n        next={shorterQuotes}\n        hasMore={true} // Replace with a condition based on your data source\n        height={620}\n      >\n        <div id=\"back-to-top\"></div>\n        <div className=\"card-containers\">\n          {search.length > 0\n            ? filteredResults.map((item, key) => {\n                return <CardInfo quote={item.content} author={item.author} />;\n              })\n            : shorterQuotes.map((item, key) => {\n                return <CardInfo key={item} quote={item.content} author={item.author} />;\n              })}\n        </div>\n       {/* //!   will style this later */}\n        <a href=\"#back-to-top\">\n          <FontAwesomeIcon className=\"back-to-top\" icon={faArrowAltCircleUp} />\n        </a>\n      </InfiniteScroll>\n      <footer\n        style={{\n          color: `${colors[newColorState]}`,\n          transition: \"all .5s ease-in-out\",\n        }}\n        className=\"tc ma5\"\n      >\n        Developed By{\" \"}\n        <a\n          style={{\n            color: `${colors[newColorState]}`,\n            transition: \"all .5s ease-in-out\",\n          }}\n          href=\"https://github.com/cassius2828\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Cassius Reynolds\n        </a>\n      </footer>\n    </div>\n  );\n};\n\n//* Will add <Link> to navigate card info, will bring us back to main screen with that quote selected\n//* in order to do this, that change will have to change the state as well. Action creators are the only way to\n//*change state in such a way right? So I will need to look into that\n//? OR, I could make it to where when a card is clicked all other cards disappear and this one grows??\n//?which ever concept is more feasable I will pursue\n\n\n/*\nThings to do\n1: Add dropdown filter by category\n2: make cards clickable and take you to the main screen with the state updated to that card number\n\n\n\n*/"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,UAAU;AAC/B,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAO,iBAAiB;AACxB,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAChC;AACA,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,kBAAkB,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,aAAa,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;EACzD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMgB,YAAY,GAAIC,WAAW,IAAK;IACpCJ,SAAS,CAACI,WAAW,CAAC;IACtB,IAAIL,MAAM,KAAK,EAAE,EAAE;MACjB,MAAMM,YAAY,GAAGjB,aAAa,CAACkB,MAAM,CAAEC,IAAI,IAAK;QAClD,OAAOC,MAAM,CAACC,MAAM,CAACF,IAAI,CAAC,CACvBG,IAAI,CAAC,GAAG,CAAC,CACTC,iBAAiB,CAAC,CAAC,CACnBC,QAAQ,CAACb,MAAM,CAACY,iBAAiB,CAAC,CAAC,CAAC;MACzC,CAAC,CAAC;MACFT,kBAAkB,CAACG,YAAY,CAAC;IAClC,CAAC,MAAM;MACLH,kBAAkB,CAACd,aAAa,CAAC;IACnC;EACF,CAAC;EAED,oBACEK,OAAA;IAAKoB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCrB,OAAA;MACEsB,KAAK,EAAE;QACLjB,KAAK,EAAEb,MAAM,CAACW,aAAa,CAAC;QAC5BoB,MAAM,EAAG,aAAY/B,MAAM,CAACW,aAAa,CAAE;MAC7C,CAAE;MACFqB,QAAQ,EAAGC,CAAC,IAAKf,YAAY,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAC9CP,SAAS,EAAC,kCAAkC;MAC5CQ,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAEFjC,OAAA,CAACJ,cAAc;MACbwB,SAAS,EAAC,qBAAqB;MAC/Bc,UAAU,EAAEvC,aAAa,CAACwC,MAAO;MACjCC,IAAI,EAAEzC,aAAc;MACpB0C,OAAO,EAAE,IAAK,CAAC;MAAA;MACfC,MAAM,EAAE,GAAI;MAAAjB,QAAA,gBAEZrB,OAAA;QAAKuC,EAAE,EAAC;MAAa;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5BjC,OAAA;QAAKoB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC7Bf,MAAM,CAAC6B,MAAM,GAAG,CAAC,GACd3B,eAAe,CAACgC,GAAG,CAAC,CAAC1B,IAAI,EAAE2B,GAAG,KAAK;UACjC,oBAAOzC,OAAA,CAACT,QAAQ;YAACmD,KAAK,EAAE5B,IAAI,CAAC6B,OAAQ;YAACC,MAAM,EAAE9B,IAAI,CAAC8B;UAAO;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAC/D,CAAC,CAAC,GACFtC,aAAa,CAAC6C,GAAG,CAAC,CAAC1B,IAAI,EAAE2B,GAAG,KAAK;UAC/B,oBAAOzC,OAAA,CAACT,QAAQ;YAAYmD,KAAK,EAAE5B,IAAI,CAAC6B,OAAQ;YAACC,MAAM,EAAE9B,IAAI,CAAC8B;UAAO,GAA/C9B,IAAI;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA6C,CAAC;QAC1E,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENjC,OAAA;QAAG6C,IAAI,EAAC,cAAc;QAAAxB,QAAA,eACpBrB,OAAA,CAACH,eAAe;UAACuB,SAAS,EAAC,aAAa;UAAC0B,IAAI,EAAEhD;QAAmB;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC,eACjBjC,OAAA;MACEsB,KAAK,EAAE;QACLjB,KAAK,EAAG,GAAEb,MAAM,CAACW,aAAa,CAAE,EAAC;QACjC4C,UAAU,EAAE;MACd,CAAE;MACF3B,SAAS,EAAC,QAAQ;MAAAC,QAAA,GACnB,cACa,EAAC,GAAG,eAChBrB,OAAA;QACEsB,KAAK,EAAE;UACLjB,KAAK,EAAG,GAAEb,MAAM,CAACW,aAAa,CAAE,EAAC;UACjC4C,UAAU,EAAE;QACd,CAAE;QACFF,IAAI,EAAC,gCAAgC;QACrCnB,MAAM,EAAC,QAAQ;QACfsB,GAAG,EAAC,YAAY;QAAA3B,QAAA,EACjB;MAED;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA/B,EAAA,CArFaD,YAAY;EAAA,QACDR,WAAW;AAAA;AAAAwD,EAAA,GADtBhD,YAAY;AAAA,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}