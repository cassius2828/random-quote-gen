{"ast":null,"code":"var _jsxFileName = \"/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/randomQuoteGen/random-quote-gen/src/Text.js\",\n  _s = $RefreshSig$();\nimport tachyons from \"tachyons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux/es/hooks/useSelector\";\n\n// exports\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Text = () => {\n  _s();\n  const [quoteArr, setquoteArr] = useState([]);\n  const fetchQuotes = async () => {\n    try {\n      const data = await axios.get(\"https://type.fit/api/quotes\");\n      setquoteArr(data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    fetchQuotes();\n  }, []);\n  const colors = [\"#FF6633\", \"#21d214\", \"#d61a1a\", \"#0ed6d3\", \"#ba9a2f\", \"#3369ff\", \"#60514c\", \"#32724f\", \"#c91ead\", \"#d82b6b\", \"#3029fb\", \"#657077\", \"#99de3f\", \"#b433ff\", \"#590e0e\", \"#131142\"];\n  const newQuoteState = useSelector(state => state.quote);\n  const newColorState = useSelector(state => state.color);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: noFadeState,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: colors[newColorState],\n          transition: \"all .5s ease-in-out\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faQuoteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), quoteArr[3] ? \" \" + quoteArr[newQuoteState].text : console.log(\"array is empty\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: colors[newColorState],\n          transition: \"all .5s ease-in-out\"\n        },\n        children: [\"-\", \" \", quoteArr[3] ? quoteArr[newQuoteState].author ? quoteArr[newQuoteState].author : \"anonymous\" : console.log(\"array is empty\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Text, \"tncon5gF1N4NoMlh/0G4cD/TOtA=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Text;\nexport default Text;\n\n//! keyframes info below\n/*\nconst textFade = keyframes`\n0% {\n  opactiy: 1;\n}\n\n50% {\n  opacity: 0\n}\n\n100% {\n  opacity: 1\n}`;\n\nconst Title = styled.h1`\nanimation-name: ${textFade};\nanimation-duration: .5s;\n`;\n*/\n\n//? Quote API Below\n/*\n\nfetch(\"https://type.fit/api/quotes\")\n  .then(function(response) {\n    return response.json();\n  })\n  .then(function(data) {\n    console.log(data);\n  });\n\n*/\n\n// {/* {quoteArr.forEach((quote) => (\n\n// ))} */\n// }\n/*\n\neverytime I click the submit button 2 things happen\n1: Generate new quotes\n2: Generate new colors\n\nif(prevIndex < index) {\n  *display next colors from arr*\n  counter++\n} else if (index > 9) {\n  *display initial color*\n  counter - 10\n}\n\n*/\n\n//? I think the error is bc the part of the data arr I am trying to access either\n//? wont load, the number is not a number given in the array index, or something was\n//? done to affect the array / ability to access the array\n\n//* It claims the issue is on the Text component, but I am having a hard time figureing out\n//* what made it stop working when it worked fine earlier\n\n// test\nvar _c;\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["tachyons","FontAwesomeIcon","faQuoteLeft","axios","useEffect","useState","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","Text","_s","quoteArr","setquoteArr","fetchQuotes","data","get","error","console","log","colors","newQuoteState","state","quote","newColorState","color","children","className","noFadeState","style","transition","icon","fileName","_jsxFileName","lineNumber","columnNumber","text","author","_c","$RefreshReg$"],"sources":["/Users/cassiusreynolds/Desktop/coding/freecodecamp/react/randomQuoteGen/random-quote-gen/src/Text.js"],"sourcesContent":["import tachyons from \"tachyons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux/es/hooks/useSelector\";\n\n\n// exports\n\n\nconst Text = () => {\n  const [quoteArr, setquoteArr] = useState([]);\n\n  const fetchQuotes = async () => {\n    try {\n      const data = await axios.get(\"https://type.fit/api/quotes\");\n      setquoteArr(data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchQuotes();\n  }, []);\n\nconst colors = [\n  \"#FF6633\",\n  \"#21d214\",\n  \"#d61a1a\",\n  \"#0ed6d3\",\n  \"#ba9a2f\",\n  \"#3369ff\",\n  \"#60514c\",\n  \"#32724f\",\n  \"#c91ead\",\n  \"#d82b6b\",\n  \"#3029fb\",\n  \"#657077\",\n  \"#99de3f\",\n  \"#b433ff\",\n  \"#590e0e\",\n  \"#131142\",\n];\n\n  const newQuoteState = useSelector((state) => state.quote);\n  const newColorState = useSelector((state) => state.color);\n\n\n  return (\n    <>\n      {\" \"}\n      <div className={noFadeState}>\n        \n\n        <h2\n          style={{\n            color: colors[newColorState],\n            transition: \"all .5s ease-in-out\",\n          }}\n        >\n          <FontAwesomeIcon icon={faQuoteLeft} />\n          {quoteArr[3]\n            ? \" \" + quoteArr[newQuoteState].text\n            : console.log(\"array is empty\")}\n        </h2>\n        <p\n          style={{\n            color: colors[newColorState],\n            transition: \"all .5s ease-in-out\",\n          }}\n        >\n          -{\" \"}\n          {quoteArr[3]\n            ? quoteArr[newQuoteState].author\n              ? quoteArr[newQuoteState].author\n              : \"anonymous\"\n            : console.log(\"array is empty\")}\n        </p>\n\n      </div>\n    </>\n  );\n};\n\nexport default Text;\n\n\n//! keyframes info below\n/*\nconst textFade = keyframes`\n0% {\n  opactiy: 1;\n}\n\n50% {\n  opacity: 0\n}\n\n100% {\n  opacity: 1\n}`;\n\nconst Title = styled.h1`\nanimation-name: ${textFade};\nanimation-duration: .5s;\n`;\n*/\n\n\n\n\n\n\n\n//? Quote API Below\n/*\n\nfetch(\"https://type.fit/api/quotes\")\n  .then(function(response) {\n    return response.json();\n  })\n  .then(function(data) {\n    console.log(data);\n  });\n\n*/\n\n// {/* {quoteArr.forEach((quote) => (\n\n// ))} */\n// }\n/*\n\neverytime I click the submit button 2 things happen\n1: Generate new quotes\n2: Generate new colors\n\nif(prevIndex < index) {\n  *display next colors from arr*\n  counter++\n} else if (index > 9) {\n  *display initial color*\n  counter - 10\n}\n\n*/\n\n//? I think the error is bc the part of the data arr I am trying to access either\n//? wont load, the number is not a number given in the array index, or something was\n//? done to affect the array / ability to access the array\n\n//* It claims the issue is on the Text component, but I am having a hard time figureing out\n//* what made it stop working when it worked fine earlier\n\n// test\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}